{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "adf-psas-deda-fdp-qa-01"
        },
        "ls_cfod_sap_hana_parameterized_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'ls_cfod_sap_hana_parameterized'",
            "defaultValue": "SERVERNODE=@{linkedService().ServerName};UID=@{linkedService().UserName}"
        },
        "AzureSqlDatabase1_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'",
            "defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=sql-server-psas-deda-fdp-qa.database.windows.net;Initial Catalog=sqldb-psas-deda-fdp-qa-01;User ID=psasfdpsqladmin"
        },
        "ls_cfod_sql_server_rds_parametrized_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'ls_cfod_sql_server_rds_parametrized'",
            "defaultValue": "Integrated Security=False;Data Source=@{linkedService().ServerName};Initial Catalog=@{linkedService().SQLDatabaseName};User ID=@{linkedService().UserName}"
        },
        "ls_cfod_key_vault_01_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "@{linkedService().key_vault_url}"
        },
        "AzureDatabricksLinkedServiceInteractiveCluster_properties_typeProperties_existingClusterId": {
            "type": "string",
            "defaultValue": "@linkedService().cluster_id"
        },
        "ls_cfod_adls2_01_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "@{linkedService().storage_account_url}"
        },
        "ls_cfod_bpc_properties_typeProperties_server": {
            "type": "string",
            "defaultValue": "bcpapp01.mckesson.com"
        },
        "ls_cfod_bpc_properties_typeProperties_systemNumber": {
            "type": "string",
            "defaultValue": "00"
        },
        "ls_cfod_bpc_properties_typeProperties_clientId": {
            "type": "string",
            "defaultValue": "900"
        },
        "ls_cfod_bpc_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "BPC_DATABRIC"
        },
        "fdp_shir_properties_typeProperties_resource_id": {
            "type": "string",
            "defaultValue": "/subscriptions/ae9ff6a8-2caf-45d6-86c7-64f8fa1bf196/resourcegroups/rg-psas-cfo-dashboard-westus-dev/providers/Microsoft.DataFactory/factories/adf-psascfod-dev-01/integrationruntimes/CFOD-SHIR"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/azureIntegrationRuntime-L')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "Managed",
                "description": "Azure IR with Compute size ‘Large’ , Memory Optimized with 16 Cores.",
                "typeProperties": {
                    "computeProperties": {
                        "location": "West US",
                        "dataFlowProperties": {
                            "computeType": "MemoryOptimized",
                            "coreCount": 32,
                            "timeToLive": 10,
                            "cleanup": false,
                            "customProperties": []
                        },
                        "pipelineExternalComputeScaleProperties": {
                            "timeToLive": 60,
                            "numberOfPipelineNodes": 1,
                            "numberOfExternalNodes": 1
                        }
                    }
                },
                "managedVirtualNetwork": {
                    "type": "ManagedVirtualNetworkReference",
                    "referenceName": "default"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/FDP-SHIR')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "SelfHosted",
                "description": "Self Hosted Integration Runtime to connect to internal private network.\nThis is linked to CFOD-SHIR in adf-psascfod-dev-01",
                "typeProperties": {
                    "linkedInfo": {
                        "resourceId": "[parameters('fdp_shir_properties_typeProperties_resource_id')]",
                        "authorizationType": "Rbac"
                    }     
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_cfod_key_vault_01')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Key vault connection for QA",
                "parameters": {
                    "key_vault_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('ls_cfod_key_vault_01_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureDatabricksLinkedServiceInteractiveCluster')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Linked service for interactive cluster",
                "parameters": {
                    "workspace_resource_id": {
                        "type": "string"
                    },
                    "cluster_id": {
                        "type": "string"
                    },
                    "workspace_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureDatabricks",
                "typeProperties": {
                    "domain": "@linkedService().workspace_url",
                    "authentication": "MSI",
                    "workspaceResourceId": "@linkedService().workspace_resource_id",
                    "existingClusterId": "[parameters('AzureDatabricksLinkedServiceInteractiveCluster_properties_typeProperties_existingClusterId')]"
                },
                "connectVia": {
                    "referenceName": "azureIntegrationRuntime-L",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/azureIntegrationRuntime-L')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureDatabricksLinkedService')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "workspace_url": {
                        "type": "string"
                    },
                    "workspace_resource_id": {
                        "type": "string"
                    },
                    "cluster_version": {
                        "type": "string"
                    },
                    "node_type": {
                        "type": "string"
                    },
                    "driver_type": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureDatabricks",
                "typeProperties": {
                    "domain": "@linkedService().workspace_url",
                    "authentication": "MSI",
                    "workspaceResourceId": "@linkedService().workspace_resource_id",
                    "newClusterNodeType": "@linkedService().node_type",
                    "newClusterNumOfWorker": "2:64",
                    "newClusterSparkConf": {
                        "spark.sql.shuffle.partitions": "2000",
                        "spark.sql.files.maxPartitionBytes": "209715200"
                    },
                    "newClusterSparkEnvVars": {
                        "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
                    },
                    "newClusterVersion": "@linkedService().cluster_version",
                    "newClusterLogDestination": "dbfs:/cluster-logs/",
                    "newClusterDriverNodeType": "@linkedService().driver_type",
                    "clusterOption": "Autoscaling",
                    "newClusterInitScripts": [],
                    "dataSecurityMode": "USER_ISOLATION"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_cfod_adls2_01')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Linked service to connect ADLS to ADF",
                "parameters": {
                    "storage_account_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('ls_cfod_adls2_01_properties_typeProperties_url')]"
                },
                "connectVia": {
                    "referenceName": "FDP-SHIR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/FDP-SHIR')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_cfod_bpc')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "BPC parameterized connection to query the bex query from Prod ",
                "annotations": [],
                "type": "SapBw",
                "typeProperties": {
                    "server": "[parameters('ls_cfod_bpc_properties_typeProperties_server')]",
                    "systemNumber": "[parameters('ls_cfod_bpc_properties_typeProperties_systemNumber')]",
                    "clientId": "[parameters('ls_cfod_bpc_properties_typeProperties_clientId')]",
                    "userName": "[parameters('ls_cfod_bpc_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "ls_cfod_key_vault_01",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "secret-psas-fdp-sa-bpc-pwd"
                    }
                },
                "connectVia": {
                    "referenceName": "FDP-SHIR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/FDP-SHIR')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_key_vault_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_cfod_sap_hana_parameterized')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "SAP HANA connection to BHH by parameterizing connection table",
                "parameters": {
                    "ServerName": {
                        "type": "string"
                    },
                    "UserName": {
                        "type": "string"
                    },
                    "KV_SecretName": {
                        "type": "string"
                    },
                    "key_vault_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "SapHana",
                "typeProperties": {
                    "connectionString": "[parameters('ls_cfod_sap_hana_parameterized_connectionString')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "ls_cfod_key_vault_01",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "key_vault_url": {
                                    "value": "@linkedService().key_vault_url",
                                    "type": "Expression"
                                }
                            }
                        },
                        "secretName": {
                            "value": "@linkedService().KV_SecretName",
                            "type": "Expression"
                        }
                    }
                },
                "connectVia": {
                    "referenceName": "FDP-SHIR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/FDP-SHIR')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_key_vault_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "key_vault_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('AzureSqlDatabase1_connectionString')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "ls_cfod_key_vault_01",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "key_vault_url": {
                                    "value": "@linkedService().key_vault_url",
                                    "type": "Expression"
                                }
                            }
                        },
                        "secretName": "secret-psas-fdp-sql-server-pwd"
                    }
                },
                "connectVia": {
                    "referenceName": "FDP-SHIR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/FDP-SHIR')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_key_vault_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_cfod_sql_server_rds_parametrized')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "RDS sql server for configuration entries parametrized",
                "parameters": {
                    "ServerName": {
                        "type": "string"
                    },
                    "UserName": {
                        "type": "string"
                    },
                    "KV_SecretName": {
                        "type": "string"
                    },
                    "SQLDatabaseName": {
                        "type": "string"
                    },
                    "key_vault_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AmazonRdsForSqlServer",
                "typeProperties": {
                    "connectionString": "[parameters('ls_cfod_sql_server_rds_parametrized_connectionString')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "ls_cfod_key_vault_01",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "key_vault_url": {
                                    "value": "@linkedService().key_vault_url",
                                    "type": "Expression"
                                }
                            }
                        },
                        "secretName": {
                            "value": "@linkedService().KV_SecretName",
                            "type": "Expression"
                        }
                    }
                },
                "connectVia": {
                    "referenceName": "FDP-SHIR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/FDP-SHIR')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_key_vault_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/adls2_config_table')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_cfod_adls2_01",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "storage_account_url": {
                            "value": "@dataset().storage_account_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "storage_account_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "DI_PIPELINE_CONFIG_TBL.txt",
                        "folderPath": "test",
                        "fileSystem": "usplandingzone"
                    },
                    "columnDelimiter": "|",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "id|env|process_name|interface_desc|interface_active|business_unit|segment_name|process_type|source_table_name|landing_storage_layer|source_query_dml|source_delta_col|source_delta_val|source_delta_op|landing_storage_account|landing_storage_container|landing_target_dir|landing_target_path|landing_target_file_nm|landing_target_full_path|landing_last_start_date|landing_last_end_date|bronze_table_name|bronze_storage_layer|bronze_table_delta_path|bronze_write_mode|bronze_storage_container|bronze_storage_account|bronze_table_full_path|bronze_table_housekeeping_column_list|bronze_ddl_file_path|silver_table_name|silver_storage_layer|silver_table_delta_path|silver_write_mode|silver_storage_container|silver_storage_account|silver_table_full_path|silver_dml|silver_ddl_file_path|silver_enable_dq_checks|silver_dq_config_id|md5_flag|silver_table_housekeeping_column_list|gold_table_name|gold_storage_layer|gold_table_full_path|gold_ddl_file_path|is_gold_enable|gold_dml|gold_recon_query|is_dimension|source_system_name|source_landing_column_map|source_partition_col",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_adls2_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sac_product_mapping_parquet')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_cfod_adls2_01",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "storage_account_url": {
                            "value": "@dataset().storage_account_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "storage_account_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "sac_product_hierarchy1_mapping.parquet",
                        "folderPath": "landing/psas/usp/sap_bhp/finance/hierarchy/sac_product_hierarchy1_mapping",
                        "fileSystem": "usplandingzone"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_adls2_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sac_mck_code_mapping_parquet')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_cfod_adls2_01",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "storage_account_url": {
                            "value": "@dataset().storage_account_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "storage_account_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "sac_company_code_mapping.parquet",
                        "folderPath": "landing/psas/usp/sap_bhp/finance/hierarchy/sac_company_code_mapping",
                        "fileSystem": "usplandingzone"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_adls2_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/adls2_parquet_file')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Dataset to create parquet files in landing",
                "linkedServiceName": {
                    "referenceName": "ls_cfod_adls2_01",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "storage_account_url": {
                            "value": "@dataset().storage_account_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "target_dir": {
                        "type": "string"
                    },
                    "target_file_system": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    },
                    "storage_account_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().file_path",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().target_dir",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().target_file_system",
                            "type": "Expression"
                        }
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_adls2_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sac_account_classification_mapping')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_cfod_adls2_01",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "storage_account_url": {
                            "value": "@dataset().storage_account_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "storage_account_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Excel",
                "typeProperties": {
                    "sheetName": "Account_Classification",
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "DIMENSIONS-HIERARCHY -SAC.xlsx",
                        "folderPath": "raw_files",
                        "fileSystem": "usplandingzone"
                    },
                    "firstRowAsHeader": true
                },
                "schema": [
                    {
                        "name": "Copa_Account_Classification",
                        "type": "String"
                    },
                    {
                        "name": "Description",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_adls2_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sac_mck_code_mapping')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_cfod_adls2_01",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "storage_account_url": {
                            "value": "@dataset().storage_account_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "storage_account_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Excel",
                "typeProperties": {
                    "sheetName": "McK-company-code",
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "DIMENSIONS-HIERARCHY -SAC.xlsx",
                        "folderPath": "raw_files",
                        "fileSystem": "usplandingzone"
                    },
                    "firstRowAsHeader": true
                },
                "schema": [
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_adls2_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PipelineConfigSource')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_cfod_adls2_01",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "storage_account_url": {
                            "value": "@dataset().storage_account_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "directory": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string"
                    },
                    "sheet": {
                        "type": "string"
                    },
                    "storage_account_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Excel",
                "typeProperties": {
                    "sheetName": {
                        "value": "@dataset().sheet",
                        "type": "Expression"
                    },
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().file",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().directory",
                            "type": "Expression"
                        },
                        "fileSystem": {
                            "value": "@dataset().container",
                            "type": "Expression"
                        }
                    },
                    "firstRowAsHeader": true
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_adls2_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sac_customer_mapping')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_cfod_adls2_01",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "storage_account_url": {
                            "value": "@dataset().storage_account_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "storage_account_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Excel",
                "typeProperties": {
                    "sheetName": "SAC-customer-mapping-new",
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "DIMENSIONS-HIERARCHY -SAC.xlsx",
                        "folderPath": "raw_files",
                        "fileSystem": "usplandingzone"
                    },
                    "firstRowAsHeader": true
                },
                "schema": [
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_adls2_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SapBwCube1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_cfod_bpc",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SapBwCube",
                "schema": [],
                "typeProperties": {},
                "typePropertites": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_bpc')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sac_account_classification_mapping_parquet')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_cfod_adls2_01",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "storage_account_url": {
                            "value": "@dataset().storage_account_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "storage_account_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "sac_account_classification_mapping.parquet",
                        "folderPath": "landing/psas/usp/sap_bhp/finance/hierarchy/sac_account_classification_mapping",
                        "fileSystem": "usplandingzone"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "/BIC/PCOPYHIE1",
                        "type": "UTF8"
                    },
                    {
                        "name": "TXTSH",
                        "type": "UTF8"
                    },
                    {
                        "name": "TXTMD",
                        "type": "UTF8"
                    },
                    {
                        "name": "TXTLG",
                        "type": "UTF8"
                    },
                    {
                        "name": "pipeline_name",
                        "type": "UTF8"
                    },
                    {
                        "name": "adf_run_id",
                        "type": "UTF8"
                    },
                    {
                        "name": "adf_job_id",
                        "type": "UTF8"
                    },
                    {
                        "name": "day",
                        "type": "DATE"
                    },
                    {
                        "name": "hr",
                        "type": "INT32"
                    },
                    {
                        "name": "_rescued_data",
                        "type": "UTF8"
                    },
                    {
                        "name": "DATABRICKS_JOB_ID",
                        "type": "UTF8"
                    },
                    {
                        "name": "DATABRICKS_RUN_ID",
                        "type": "UTF8"
                    },
                    {
                        "name": "input_file_name",
                        "type": "UTF8"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_adls2_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SapHanaTable')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_cfod_sap_hana_parameterized",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "ServerName": {
                            "value": "@dataset().ServerName",
                            "type": "Expression"
                        },
                        "UserName": {
                            "value": "@dataset().UserName",
                            "type": "Expression"
                        },
                        "KV_SecretName": {
                            "value": "@dataset().KV_SecretName",
                            "type": "Expression"
                        },
                        "key_vault_url": {
                            "value": "@dataset().key_vault_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "ServerName": {
                        "type": "string"
                    },
                    "UserName": {
                        "type": "string"
                    },
                    "KV_SecretName": {
                        "type": "string"
                    },
                    "key_vault_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "SapHanaTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sap_hana_parameterized')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/FP_bpc_testing')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_cfod_bpc",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SapBwCube",
                "schema": [],
                "typeProperties": {},
                "typePropertites": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_bpc')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlTableDataset')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase1",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "key_vault_url": {
                            "value": "@dataset().key_vault_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "key_vault_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "DI_PIPELINE_CONFIG_TBL"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerTableParametrized')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "RDS Dataset to pull configuration files",
                "linkedServiceName": {
                    "referenceName": "ls_cfod_sql_server_rds_parametrized",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "ServerName": {
                            "value": "@dataset().ServerName",
                            "type": "Expression"
                        },
                        "UserName": {
                            "value": "@dataset().UserName",
                            "type": "Expression"
                        },
                        "KV_SecretName": {
                            "value": "@dataset().KV_SecretName",
                            "type": "Expression"
                        },
                        "SQLDatabaseName": {
                            "value": "@dataset().SQLDatabaseName",
                            "type": "Expression"
                        },
                        "key_vault_url": {
                            "value": "@dataset().key_vault_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "ServerName": {
                        "type": "string"
                    },
                    "UserName": {
                        "type": "string"
                    },
                    "KV_SecretName": {
                        "type": "string"
                    },
                    "SQLDatabaseName": {
                        "type": "string"
                    },
                    "key_vault_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AmazonRdsForSqlServerTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sql_server_rds_parametrized')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sac_customer_mapping_parquet')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_cfod_adls2_01",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "storage_account_url": {
                            "value": "@dataset().storage_account_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "storage_account_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "sac_customer_segment_mapping.parquet",
                        "folderPath": "landing/psas/usp/sap_bhp/finance/hierarchy/sac_customer_segment_mapping",
                        "fileSystem": "usplandingzone"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "FISCVARNT",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYPDOC",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYPITM",
                        "type": "UTF8"
                    },
                    {
                        "name": "RECORDMODE",
                        "type": "UTF8"
                    },
                    {
                        "name": "FISCYEAR",
                        "type": "UTF8"
                    },
                    {
                        "name": "FISCPER",
                        "type": "UTF8"
                    },
                    {
                        "name": "BILL_TYPE",
                        "type": "UTF8"
                    },
                    {
                        "name": "BUS_AREA",
                        "type": "UTF8"
                    },
                    {
                        "name": "CHRT_ACCTS",
                        "type": "UTF8"
                    },
                    {
                        "name": "COMP_CODE",
                        "type": "UTF8"
                    },
                    {
                        "name": "COORDER",
                        "type": "UTF8"
                    },
                    {
                        "name": "COSTELMNT",
                        "type": "UTF8"
                    },
                    {
                        "name": "CO_AREA",
                        "type": "UTF8"
                    },
                    {
                        "name": "CURTYPE",
                        "type": "UTF8"
                    },
                    {
                        "name": "CUSTOMER",
                        "type": "UTF8"
                    },
                    {
                        "name": "DISTR_CHAN",
                        "type": "UTF8"
                    },
                    {
                        "name": "DIVISION",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZMKTSEG",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZMKTPROG",
                        "type": "UTF8"
                    },
                    {
                        "name": "DOC_NUMBER",
                        "type": "UTF8"
                    },
                    {
                        "name": "DOC_TYPE",
                        "type": "UTF8"
                    },
                    {
                        "name": "GI_DATE",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CKUKLA",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CVWERK",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW002",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW003",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW004",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW006",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW007",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW008",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW013",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW300",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWWMG1",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWWMG2",
                        "type": "UTF8"
                    },
                    {
                        "name": "MANUFACTOR",
                        "type": "UTF8"
                    },
                    {
                        "name": "MATERIAL",
                        "type": "UTF8"
                    },
                    {
                        "name": "MATL_GROUP",
                        "type": "UTF8"
                    },
                    {
                        "name": "ORD_REASON",
                        "type": "UTF8"
                    },
                    {
                        "name": "PART_PRCTR",
                        "type": "UTF8"
                    },
                    {
                        "name": "PLANT",
                        "type": "UTF8"
                    },
                    {
                        "name": "PROFIT_CTR",
                        "type": "UTF8"
                    },
                    {
                        "name": "REC_TYPE",
                        "type": "UTF8"
                    },
                    {
                        "name": "SALESDEAL",
                        "type": "UTF8"
                    },
                    {
                        "name": "SALESORG",
                        "type": "UTF8"
                    },
                    {
                        "name": "SALES_DIST",
                        "type": "UTF8"
                    },
                    {
                        "name": "SHIP_TO",
                        "type": "UTF8"
                    },
                    {
                        "name": "S_ORD_ITEM",
                        "type": "UTF8"
                    },
                    {
                        "name": "VALUATION",
                        "type": "UTF8"
                    },
                    {
                        "name": "VERSION",
                        "type": "UTF8"
                    },
                    {
                        "name": "VTYPE",
                        "type": "UTF8"
                    },
                    {
                        "name": "WBS_ELEMT",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYCSOB",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PSDCONREF",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZCUSTCHID",
                        "type": "UTF8"
                    },
                    {
                        "name": "PROMOTION",
                        "type": "UTF8"
                    },
                    {
                        "name": "PSTNG_DATE",
                        "type": "UTF8"
                    },
                    {
                        "name": "SEND_CCTR",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYACPR",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYALDR",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYBYGR",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYCNDC",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYCNIT",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYHIE1",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYHIE2",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYHIE3",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYINDT",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYPOTY",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYRFDC",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYRFIT",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYSBPR",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYTPID",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYVNCD",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZRXPACK",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZPVTLBLCD",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYSLPR",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYSPCD",
                        "type": "UTF8"
                    },
                    {
                        "name": "VEN_COMPC",
                        "type": "UTF8"
                    },
                    {
                        "name": "CUST_SALES",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW014",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW015",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW016",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW017",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW018",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW019",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_CWW020",
                        "type": "UTF8"
                    },
                    {
                        "name": "CREATEDON",
                        "type": "UTF8"
                    },
                    {
                        "name": "USERNAME",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZAWTYP",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYSMCD",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PCOPYSHMC",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/CMDDCFRPT",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_AVV001",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV002",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV003",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV004",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV005",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV006",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV007",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV008",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV010",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV011",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV030",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV031",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV032",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV040",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV041",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV042",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV043",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV044",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV045",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV046",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV047",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV048",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV049",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV050",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV051",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV052",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV054",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV055",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV056",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV057",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV058",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV059",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV060",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV061",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV062",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV063",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV065",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV066",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV067",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV068",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV069",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV070",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV071",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV072",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV078",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV079",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV080",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV081",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV082",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV083",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV200",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV210",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV250",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV300",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV401",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV402",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV403",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV404",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV405",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV406",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV407",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV408",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV409",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV410",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV411",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV412",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV413",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV414",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV415",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV416",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_QABSMG",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_QVV301",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_QVVQ01",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_QVVQ02",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_QVVQ03",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "CURRENCY",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_UABSMG",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_UVV301",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_UVVQ01",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_UVVQ02",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_UVVQ03",
                        "type": "UTF8"
                    },
                    {
                        "name": "G_AVV020",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV021",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV022",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV023",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV024",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV025",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV026",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV027",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV053",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV064",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV510",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV511",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV512",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV513",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "G_AVV514",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "/BIC/ZCOUNTER1",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "/BIC/PCOPYLCNT",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "/BIC/ZCNLTGPC",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZCNTLSGPC",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZCUSTDSTN",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZCUSTRGNN",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZLOADDATE",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PMDKATR1",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZSITEID",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/PMDXCHPF",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZWW302",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZWW303",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZWW304",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZWW305",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZWW306",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZWW307",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZWW308",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/Z_AVV311",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "/BIC/Z_AVV312",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "/BIC/Z_AVV313",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "/BIC/Z_AVV314",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "/BIC/Z_AVV315",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "/BIC/Z_AVV316",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "/BIC/Z_AVV317",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "/BIC/Z_AVV318",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "/BIC/Z_QVV302",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "/BIC/Z_UVV302",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/Z_QVV303",
                        "type": "DECIMAL",
                        "precision": 38,
                        "scale": 18
                    },
                    {
                        "name": "/BIC/Z_UVV303",
                        "type": "UTF8"
                    },
                    {
                        "name": "CUST_CLASS",
                        "type": "UTF8"
                    },
                    {
                        "name": "CUST_COMPC",
                        "type": "UTF8"
                    },
                    {
                        "name": "/BIC/ZDOC_NMBR",
                        "type": "UTF8"
                    },
                    {
                        "name": "ADF_RUN_ID",
                        "type": "UTF8"
                    },
                    {
                        "name": "ADF_JOB_ID",
                        "type": "UTF8"
                    },
                    {
                        "name": "day",
                        "type": "UTF8"
                    },
                    {
                        "name": "hr",
                        "type": "UTF8"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_adls2_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sac_product_mapping')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_cfod_adls2_01",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "storage_account_url": {
                            "value": "@dataset().storage_account_url",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "storage_account_url": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Excel",
                "typeProperties": {
                    "sheetName": "SAC-product-mapping",
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "DIMENSIONS-HIERARCHY -SAC.xlsx",
                        "folderPath": "raw_files",
                        "fileSystem": "usplandingzone"
                    },
                    "firstRowAsHeader": true
                },
                "schema": [
                    {
                        "name": "system",
                        "type": "String"
                    },
                    {
                        "name": "table_name",
                        "type": "String"
                    },
                    {
                        "name": "info_object",
                        "type": "String"
                    },
                    {
                        "name": "product",
                        "type": "String"
                    },
                    {
                        "name": "decsription",
                        "type": "String"
                    },
                    {
                        "name": "prod_categrory",
                        "type": "String"
                    },
                    {
                        "name": "segment_name_in_SAC_USP_GP_dashboard",
                        "type": "String"
                    },
                    {
                        "name": "segment_name_in_SAC_USP_net_revenue_dashboard",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_adls2_01')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Delta Table Cleanup')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Notebook1",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/Shared/Utilities/Common working DB notebooks/Delta table cleanup"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDatabricksLinkedServiceInteractiveCluster",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "workspace_resource_id": {
                                    "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                    "type": "Expression"
                                },
                                "cluster_id": {
                                    "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_ID",
                                    "type": "Expression"
                                },
                                "workspace_url": {
                                    "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Tests_Folder"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T05:07:19Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedServiceInteractiveCluster')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Drop Bad Table')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Notebook1",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/Users/s4g1xod@mckesson.com/DROP TABLE"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDatabricksLinkedServiceInteractiveCluster",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "workspace_resource_id": {
                                    "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                    "type": "Expression"
                                },
                                "cluster_id": {
                                    "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_ID",
                                    "type": "Expression"
                                },
                                "workspace_url": {
                                    "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Tests_Folder"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T05:07:20Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedServiceInteractiveCluster')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Update Pipeline configs')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Stored procedure1",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[UpdatePipelineConfigOnId]",
                            "storedProcedureParameters": {
                                "key": {
                                    "value": {
                                        "value": "gold_dml",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "value": {
                                    "value": {
                                        "value": "MERGE INTO $$target_table_name AS target using ( select * FROM $$silver_temp_table_name WHERE _change_type != 'update_preimage') AS source ON concat(COALESCE(target.fiscal_yr_period, ''), COALESCE(target.copa_doc_item_num, ''), COALESCE(target.copa_doc_num, '')) = concat(COALESCE(source.fiscal_yr_period, ''), COALESCE(source.copa_doc_item_num, ''), COALESCE(source.copa_doc_num, '')) WHEN matched THEN UPDATE SET target.segment_name = source.segment_name, target.source_system_name = source.source_system_name, target.copa_doc_num = source.copa_doc_num, target.copa_doc_item_num = source.copa_doc_item_num, target.fiscal_yr_period = source.fiscal_yr_period, target.fiscal_yr = source.fiscal_yr, target.cmpny_cd = source.cmpny_cd, target.fiscal_var_cd = source.fiscal_var_cd, target.info_provider = source.info_provider, target.create_dt = source.create_dt, target.net_sls = source.net_sls, target.sls = source.sls, target.other_sls = source.other_sls, target.sls_mrgn_adjstmnts_sls = source.sls_mrgn_adjstmnts_sls, target.net_revenue = source.net_revenue, target.ngrp = source.ngrp, target.base_sell_profit = source.base_sell_profit, target.buy_profit = source.buy_profit, target.core_buy_profit = source.core_buy_profit, target.core_sell_profit = source.core_sell_profit, target.gross_profit = source.gross_profit, target.gross_profit_2 = source.gross_profit_2, target.gross_profit_adj = source.gross_profit_adj, target.other_buy_profit = source.other_buy_profit, target.realized_buy_profit = source.realized_buy_profit, target.sell_profit = source.sell_profit, target.total_nrgp = source.total_nrgp, target.asv_income = source.asv_income, target.cl1_income = source.cl1_income, target.mpgsl_income = source.mpgsl_income, target.promo_income = source.promo_income, target.glbl_income = source.glbl_income, target.net_fee_income = source.net_fee_income, target.suplr_income = source.suplr_income, target.fee_income_arc = source.fee_income_arc, target.acctng_expns = source.acctng_expns, target.addbill_cost = source.addbill_cost, target.bid_prc = source.bid_prc, target.cos_adjstmnts = source.cos_adjstmnts, target.cos_fi = source.cos_fi, target.crdt_expns = source.crdt_expns, target.crdt_expns_v1 = source.crdt_expns_v1, target.dlvry_expns = source.dlvry_expns, target.pass_thru = source.pass_thru, target.frght_allctd = source.frght_allctd, target.handlng_chrg_billing = source.handlng_chrg_billing, target.handlng_chrg_fi = source.handlng_chrg_fi, target.handlng_chrg_wvrs = source.handlng_chrg_wvrs, target.home_office_expns = source.home_office_expns, target.home_office_itd_expns = source.home_office_itd_expns, target.info_expns = source.info_expns, target.mhs_sllng_expns = source.mhs_sllng_expns, target.ncp_cost = source.ncp_cost, target.occpncy_expns = source.occpncy_expns, target.ops_payroll_expns = source.ops_payroll_expns, target.other_cogs = source.other_cogs, target.other_cogs_v1 = source.other_cogs_v1, target.other_dstrbtn_expns = source.other_dstrbtn_expns, target.regional_office_expns = source.regional_office_expns, target.retail_selling_expns = source.retail_selling_expns, target.sf_cost = source.sf_cost, target.ssf_cost = source.ssf_cost, target.admin_fee = source.admin_fee, target.admin_expns = source.admin_expns, target.cost_prc_pnt = source.cost_prc_pnt, target.fee_cost = source.fee_cost, target.net_cos = source.net_cos, target.net_drop_ship_fee = source.net_drop_ship_fee, target.net_handlng_chrg = source.net_handlng_chrg, target.srvc_fees = source.srvc_fees, target.stndrd_cost = source.stndrd_cost, target.total_dstrbtn_expns = source.total_dstrbtn_expns, target.handlng_chrg_rtrn = source.handlng_chrg_rtrn, target.cust_rtrn_adjstmnts = source.cust_rtrn_adjstmnts, target.rtrns_ = source.rtrns_, target.sls_mrgn_adjstmnts_rtrns = source.sls_mrgn_adjstmnts_rtrns, target.ffs_nrml = source.ffs_nrml, target.ffs_dffrnttd = source.ffs_dffrnttd, target.ffs = source.ffs, target.dynmc_sub_rbt_isr = source.dynmc_sub_rbt_isr, target.mrgn_rbt = source.mrgn_rbt, target.nac_rbt = source.nac_rbt, target.cust_rbts_bx = source.cust_rbts_bx, target.cust_rbts = source.cust_rbts, target.item_sub_rbt = source.item_sub_rbt, target.other_rbts = source.other_rbts, target.cogs_rbt = source.cogs_rbt, target.prepaid_rbt = source.prepaid_rbt, target.manual_rbt = source.manual_rbt, target.pass_thru_rbt = source.pass_thru_rbt, target.vcd_rbt = source.vcd_rbt, target.rdc_fee_rbt = source.rdc_fee_rbt, target.mgpsl_rbt = source.mgpsl_rbt, target.cust_disc = source.cust_disc, target.svng_grnt = source.svng_grnt, target.allowances = source.allowances, target.gx_income_admin_fees = source.gx_income_admin_fees, target.gx_income_chrgbk = source.gx_income_chrgbk, target.gx_income_deal = source.gx_income_deal, target.gx_income_npo = source.gx_income_npo, target.gx_income_pma = source.gx_income_pma, target.gx_income_slp = source.gx_income_slp, target.cust_rbts_gx = source.cust_rbts_gx, target.admin_fee_gx = source.admin_fee_gx, target.manual_gx = source.manual_gx, target.gx_income = source.gx_income, target.gx_mrgn_sls_northstar = source.gx_mrgn_sls_northstar, target.gx_income_other = source.gx_income_other, target.gx_income_pass_thru = source.gx_income_pass_thru, target.chrgbk_nsp = source.chrgbk_nsp, target.chrgbk_adjstmnts = source.chrgbk_adjstmnts, target.chrgbk_cntrct_rk_v = source.chrgbk_cntrct_rk_v, target.chrgbk_cntrct_cb_cf = source.chrgbk_cntrct_cb_cf, target.vcd_nrml = source.vcd_nrml, target.vcd_dffrnttd = source.vcd_dffrnttd, target.pharma_vcd_jrnl_entry = source.pharma_vcd_jrnl_entry, target.rdc_nrml = source.rdc_nrml, target.rdc_dffrnttd = source.rdc_dffrnttd, target.net_rdc_fees = source.net_rdc_fees, target.deal_brk = source.deal_brk, target.debit_dsllwd = source.debit_dsllwd, target.field_spprt = source.field_spprt, target.gain_shr = source.gain_shr, target.mac_ = source.mac_, target.ncp_all = source.ncp_all, target.ns_man_mrgn = source.ns_man_mrgn, target.qty_delta = source.qty_delta, target.cntrct_mark_up_down = source.cntrct_mark_up_down, target.wac = source.wac, target.cfaas_recon = source.cfaas_recon, target.eada = source.eada, target.fi_pstngs = source.fi_pstngs, target.frght = source.frght, target.invntry_adjstmnts = source.invntry_adjstmnts, target.info = source.info, target.gx_income_chrgbk_v1 = source.gx_income_chrgbk_v1, target.drop_ship_vend_cash_disc_ = source.drop_ship_vend_cash_disc_, target.gx_cmpgn_disc = source.gx_cmpgn_disc, target.incntv_rbt = source.incntv_rbt, target.incntv_rbt_v1 = source.incntv_rbt_v1, target.vend_disc = source.vend_disc, target.record_load_time = CURRENT_TIMESTAMP(), target.databricks_run_id = '$$DATABRICKS_RUN_ID', target.databricks_job_id = '$$DATABRICKS_JOB_ID', target.update_ts = CURRENT_TIMESTAMP(), target.src_load_dt_bex = source.src_load_dt, target.sls_qty_bex = source.sls_qty, target.other_cost_bex = source.other_cost, target.adf_run_id = source.adf_run_id, target.adf_job_id = source.adf_job_id when NOT matched BY target THEN INSERT ( business_unit, segment_name, source_system_name, copa_doc_num, copa_doc_item_num, fiscal_yr_period, fiscal_yr, cmpny_cd, fiscal_var_cd, info_provider, create_dt, net_sls, sls, other_sls, sls_mrgn_adjstmnts_sls, net_revenue, ngrp, base_sell_profit, buy_profit, core_buy_profit, core_sell_profit, gross_profit, gross_profit_2, gross_profit_adj, other_buy_profit, realized_buy_profit, sell_profit, total_nrgp, asv_income, cl1_income, mpgsl_income, promo_income, glbl_income, net_fee_income, suplr_income, fee_income_arc, acctng_expns, addbill_cost, bid_prc, cos_adjstmnts, cos_fi, crdt_expns, crdt_expns_v1, dlvry_expns, pass_thru, frght_allctd, handlng_chrg_billing, handlng_chrg_fi, handlng_chrg_wvrs, home_office_expns, home_office_itd_expns, info_expns, mhs_sllng_expns, ncp_cost, occpncy_expns, ops_payroll_expns, other_cogs, other_cogs_v1, other_dstrbtn_expns, regional_office_expns, retail_selling_expns, sf_cost, ssf_cost, admin_fee, admin_expns, cost_prc_pnt, fee_cost, net_cos, net_drop_ship_fee, net_handlng_chrg, srvc_fees, stndrd_cost, total_dstrbtn_expns, handlng_chrg_rtrn, cust_rtrn_adjstmnts, rtrns_, sls_mrgn_adjstmnts_rtrns, ffs_nrml, ffs_dffrnttd, ffs, dynmc_sub_rbt_isr, mrgn_rbt, nac_rbt, cust_rbts_bx, cust_rbts, item_sub_rbt, other_rbts, cogs_rbt, prepaid_rbt, manual_rbt, pass_thru_rbt, vcd_rbt, rdc_fee_rbt, mgpsl_rbt, cust_disc, svng_grnt, allowances, gx_income_admin_fees, gx_income_chrgbk, gx_income_deal, gx_income_npo, gx_income_pma, gx_income_slp, cust_rbts_gx, admin_fee_gx, manual_gx, gx_income, gx_mrgn_sls_northstar, gx_income_other, gx_income_pass_thru, chrgbk_nsp, chrgbk_adjstmnts, chrgbk_cntrct_rk_v, chrgbk_cntrct_cb_cf, vcd_nrml, vcd_dffrnttd, pharma_vcd_jrnl_entry, rdc_nrml, rdc_dffrnttd, net_rdc_fees, deal_brk, debit_dsllwd, field_spprt, gain_shr, mac_, ncp_all, ns_man_mrgn, qty_delta, cntrct_mark_up_down, wac, cfaas_recon, eada, fi_pstngs, frght, invntry_adjstmnts, info, gx_income_chrgbk_v1, drop_ship_vend_cash_disc_, gx_cmpgn_disc, incntv_rbt, incntv_rbt_v1, vend_disc, record_load_time, databricks_run_id, databricks_job_id, insert_ts, update_ts, adf_run_id, adf_job_id, src_load_dt_bex, sls_qty_bex, other_cost_bex ) VALUES ( source.business_unit, source.segment_name, source.source_system_name, source.copa_doc_num, source.copa_doc_item_num, source.fiscal_yr_period, source.fiscal_yr, source.cmpny_cd, source.fiscal_var_cd, source.info_provider, source.create_dt, source.net_sls, source.sls, source.other_sls, source.sls_mrgn_adjstmnts_sls, source.net_revenue, source.ngrp, source.base_sell_profit, source.buy_profit, source.core_buy_profit, source.core_sell_profit, source.gross_profit, source.gross_profit_2, source.gross_profit_adj, source.other_buy_profit, source.realized_buy_profit, source.sell_profit, source.total_nrgp, source.asv_income, source.cl1_income, source.mpgsl_income, source.promo_income, source.glbl_income, source.net_fee_income, source.suplr_income, source.fee_income_arc, source.acctng_expns, source.addbill_cost, source.bid_prc, source.cos_adjstmnts, source.cos_fi, source.crdt_expns, source.crdt_expns_v1, source.dlvry_expns, source.pass_thru, source.frght_allctd, source.handlng_chrg_billing, source.handlng_chrg_fi, source.handlng_chrg_wvrs, source.home_office_expns, source.home_office_itd_expns, source.info_expns, source.mhs_sllng_expns, source.ncp_cost, source.occpncy_expns, source.ops_payroll_expns, source.other_cogs, source.other_cogs_v1, source.other_dstrbtn_expns, source.regional_office_expns, source.retail_selling_expns, source.sf_cost, source.ssf_cost, source.admin_fee, source.admin_expns, source.cost_prc_pnt, source.fee_cost, source.net_cos, source.net_drop_ship_fee, source.net_handlng_chrg, source.srvc_fees, source.stndrd_cost, source.total_dstrbtn_expns, source.handlng_chrg_rtrn, source.cust_rtrn_adjstmnts, source.rtrns_, source.sls_mrgn_adjstmnts_rtrns, source.ffs_nrml, source.ffs_dffrnttd, source.ffs, source.dynmc_sub_rbt_isr, source.mrgn_rbt, source.nac_rbt, source.cust_rbts_bx, source.cust_rbts, source.item_sub_rbt, source.other_rbts, source.cogs_rbt, source.prepaid_rbt, source.manual_rbt, source.pass_thru_rbt, source.vcd_rbt, source.rdc_fee_rbt, source.mgpsl_rbt, source.cust_disc, source.svng_grnt, source.allowances, source.gx_income_admin_fees, source.gx_income_chrgbk, source.gx_income_deal, source.gx_income_npo, source.gx_income_pma, source.gx_income_slp, source.cust_rbts_gx, source.admin_fee_gx, source.manual_gx, source.gx_income, source.gx_mrgn_sls_northstar, source.gx_income_other, source.gx_income_pass_thru, source.chrgbk_nsp, source.chrgbk_adjstmnts, source.chrgbk_cntrct_rk_v, source.chrgbk_cntrct_cb_cf, source.vcd_nrml, source.vcd_dffrnttd, source.pharma_vcd_jrnl_entry, source.rdc_nrml, source.rdc_dffrnttd, source.net_rdc_fees, source.deal_brk, source.debit_dsllwd, source.field_spprt, source.gain_shr, source.mac_, source.ncp_all, source.ns_man_mrgn, source.qty_delta, source.cntrct_mark_up_down, source.wac, source.cfaas_recon, source.eada, source.fi_pstngs, source.frght, source.invntry_adjstmnts, source.info, source.gx_income_chrgbk_v1, source.drop_ship_vend_cash_disc_, source.gx_cmpgn_disc, source.incntv_rbt, source.incntv_rbt_v1, source.vend_disc, source.record_load_time, '$$DATABRICKS_RUN_ID', '$$DATABRICKS_JOB_ID', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP(), source.adf_run_id, source.adf_job_id, source.src_load_dt, source.sls_qty, source.other_cost )",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ID": {
                                    "value": {
                                        "value": "36",
                                        "type": "Expression"
                                    },
                                    "type": "Int32"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_cfod_sql_server_rds_parametrized",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "ServerName": {
                                    "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                    "type": "Expression"
                                },
                                "UserName": {
                                    "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                    "type": "Expression"
                                },
                                "KV_SecretName": {
                                    "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                    "type": "Expression"
                                },
                                "SQLDatabaseName": {
                                    "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                    "type": "Expression"
                                },
                                "key_vault_url": {
                                    "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Tests_Folder"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T05:07:20Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sql_server_rds_parametrized')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_ingest_data_in_pipeline_cofigs')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Copy GIT to ADLS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "upsert",
                                "upsertSettings": {
                                    "useTempDB": true,
                                    "keys": [
                                        "id"
                                    ]
                                },
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "PipelineConfigSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "directory": {
                                        "value": "@pipeline().parameters.directory",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@pipeline().parameters.container_name",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@pipeline().parameters.file_name",
                                        "type": "Expression"
                                    },
                                    "sheet": {
                                        "value": "@pipeline().parameters.sheet_name",
                                        "type": "Expression"
                                    },
                                    "storage_account_url": {
                                        "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "AzureSqlTableDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Copy GIT to ADLS",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/Users/sr1hruf@mckesson.com/Pipeline config v2.0",
                            "baseParameters": {
                                "adls_container": {
                                    "value": "@pipeline().parameters.container_name",
                                    "type": "Expression"
                                },
                                "adls_storage_account": {
                                    "value": "@pipeline().parameters.storage_account",
                                    "type": "Expression"
                                },
                                "adls_relative_path": {
                                    "value": "@concat('/',pipeline().parameters.directory,'/',pipeline().parameters.file_name)",
                                    "type": "Expression"
                                },
                                "git_location": {
                                    "value": "@pipeline().parameters.git_location",
                                    "type": "Expression"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDatabricksLinkedServiceInteractiveCluster",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "workspace_resource_id": {
                                    "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                    "type": "Expression"
                                },
                                "cluster_id": {
                                    "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_ID",
                                    "type": "Expression"
                                },
                                "workspace_url": {
                                    "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "storage_account": {
                        "type": "string",
                        "defaultValue": "stpsasdedafdpqa01"
                    },
                    "container_name": {
                        "type": "string",
                        "defaultValue": "usplandingzone"
                    },
                    "directory": {
                        "type": "string",
                        "defaultValue": "test"
                    },
                    "file_name": {
                        "type": "string",
                        "defaultValue": "pipeline_configs_data_qa.xlsx"
                    },
                    "git_location": {
                        "type": "string",
                        "defaultValue": "/Workspace/Repos/deda-fdp/deda-fdp/"
                    },
                    "sheet_name": {
                        "type": "string",
                        "defaultValue": "data"
                    }
                },
                "folder": {
                    "name": "Tests_Folder"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:02:42Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/PipelineConfigSource')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlTableDataset')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedServiceInteractiveCluster')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_ingest_data_in_pipeline_cofigs_old')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "upsert",
                                "upsertSettings": {
                                    "useTempDB": true,
                                    "keys": [
                                        "id"
                                    ]
                                },
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "PipelineConfigSource",
                                "type": "DatasetReference",
                                "parameters": {
                                    "directory": {
                                        "value": "@pipeline().parameters.directory",
                                        "type": "Expression"
                                    },
                                    "container": {
                                        "value": "@pipeline().parameters.container_name",
                                        "type": "Expression"
                                    },
                                    "file": {
                                        "value": "@pipeline().parameters.file_name",
                                        "type": "Expression"
                                    },
                                    "sheet": {
                                        "value": "@pipeline().parameters.sheet_name",
                                        "type": "Expression"
                                    },
                                    "storage_account_url": {
                                        "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "AzureSqlTableDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "storage_account": {
                        "type": "string",
                        "defaultValue": "stpsasdedafdpqa01"
                    },
                    "container_name": {
                        "type": "string",
                        "defaultValue": "usplandingzone"
                    },
                    "directory": {
                        "type": "string",
                        "defaultValue": "test"
                    },
                    "file_name": {
                        "type": "string",
                        "defaultValue": "pipeline_configs_data_qa.xlsx"
                    },
                    "sheet_name": {
                        "type": "string",
                        "defaultValue": "data"
                    }
                },
                "folder": {
                    "name": "Tests_Folder"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:02:42Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/PipelineConfigSource')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlTableDataset')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_adhoc_sac_hierarchy_bronze')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nprocess_name,\nsource_table_name,\nbronze_table_name,\nbronze_table_full_path,\nbronze_write_mode,\nlanding_target_dir,\nlanding_target_path,\nlanding_target_file_nm,\nbronze_table_delta_path,\nlanding_storage_container,\nlanding_storage_account,\nenv,\nbronze_ddl_file_path\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='FLAT_FILE_SAC_HIERARCHY'\nand interface_active='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "bronze_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/landing_to_bronze_ingestion",
                                        "baseParameters": {
                                            "target_table_identifier": {
                                                "value": "@item().bronze_table_name",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "target_data_path": {
                                                "value": "@item().bronze_table_full_path",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@concat('abfss://',item().landing_storage_container,'@',item().landing_storage_account,'.dfs.core.windows.net/',item().landing_target_dir,'/',item().landing_target_path,item().landing_target_file_nm,'/')\n",
                                                "type": "Expression"
                                            },
                                            "bronze_write_mode": {
                                                "value": "@item().bronze_write_mode",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "table_ddl_file_path": {
                                                "value": "@item().bronze_ddl_file_path",
                                                "type": "Expression"
                                            },
                                            "bad_record_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/badrecord/'\n)",
                                                "type": "Expression"
                                            },
                                            "schema_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/schema')",
                                                "type": "Expression"
                                            },
                                            "checkpoint_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Web_Fail_Bronze",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "bronze_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze] [Failed] for @{item().landing_target_file_nm}\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "bronze_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze][Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load completed. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":@{pipeline().globalParameters.EMAIL_RECEIPT},\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load is failed. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/sac_hierarchy_load"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:18:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_copa_bex_bronze')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nid,\nprocess_name,\nsource_table_name,\nbronze_table_name,\nbronze_table_full_path,\nbronze_write_mode,\nlanding_target_dir,\nlanding_target_path,\nlanding_target_file_nm,\nbronze_table_delta_path,\nlanding_storage_container,\nlanding_storage_account,\nenv,\nbronze_ddl_file_path\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BHP_COPA_BEX_ACTUALS'\nand interface_active = 'Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "bronze_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/landing_to_bronze_ingestion",
                                        "baseParameters": {
                                            "target_table_identifier": {
                                                "value": "@item().bronze_table_name",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "target_data_path": {
                                                "value": "@item().bronze_table_full_path\n",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@concat('abfss://',item().landing_storage_container,'@',item().landing_storage_account,'.dfs.core.windows.net/',item().landing_target_dir,'/',item().landing_target_path,item().landing_target_file_nm,'/')\n",
                                                "type": "Expression"
                                            },
                                            "write_mode": {
                                                "value": "@item().bronze_write_mode",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME\n",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "table_ddl_file_path": {
                                                "value": "@item().bronze_ddl_file_path",
                                                "type": "Expression"
                                            },
                                            "bad_record_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/badrecord/'\n)",
                                                "type": "Expression"
                                            },
                                            "schema_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/schema')",
                                                "type": "Expression"
                                            },
                                            "checkpoint_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "Email_receipt": {
                                                "value": "@pipeline().globalParameters.Email_receipt",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "bronze_write_mode": {
                                                "value": "@item().bronze_write_mode",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Web_Fail_Bronze",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "bronze_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze] [Failed] - for @{item().landing_target_file_nm}\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "bronze_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze] [Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load completed for fact tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load is failed for fact tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/copa_actuals"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:18:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_history_inner_level_pipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.Get_Distinct_dates",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Lookup_connection_table",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AmazonRdsForSqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('Select Id, ServerName, UserName, KeyVaultDetails from ', pipeline().globalParameters.SQLSERVER_SAP_CONNECTION_TABLENAME, ' where Env=''', pipeline().globalParameters.SAP_BW_ENV, '''')\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "SqlServerTableParametrized",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ServerName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                    "type": "Expression"
                                                },
                                                "UserName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                    "type": "Expression"
                                                },
                                                "KV_SecretName": {
                                                    "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                    "type": "Expression"
                                                },
                                                "SQLDatabaseName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                    "type": "Expression"
                                                },
                                                "key_vault_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "Copy_data_from_source_sink",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Lookup_connection_table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SapHanaSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "ADF_RUN_ID",
                                                    "value": {
                                                        "value": "@pipeline().RunId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "ADF_JOB_ID",
                                                    "value": {
                                                        "value": "@pipeline().TriggerId",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "query": {
                                                "value": "@concat(pipeline().parameters.source_query_dml, ' WHERE ?AdfHanaDynamicRangePartitionCondition and \"',pipeline().parameters.zloaddate_col_nm,'\"=''', item().DATES,'''') \n\n",
                                                "type": "Expression"
                                            },
                                            "packetSize": 2000000,
                                            "partitionOption": "SapHanaDynamicRange",
                                            "partitionSettings": {
                                                "partitionColumnName": {
                                                    "value": "@{pipeline().parameters.partition_col_nm}",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "sink": {
                                            "type": "ParquetSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings",
                                                "maxConcurrentConnections": 20
                                            },
                                            "formatSettings": {
                                                "type": "ParquetWriteSettings",
                                                "maxRowsPerFile": 700000
                                            }
                                        },
                                        "enableStaging": false,
                                        "parallelCopies": 20,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "SapHanaTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ServerName": {
                                                    "value": "@activity('Lookup_connection_table').output.firstRow.ServerName",
                                                    "type": "Expression"
                                                },
                                                "UserName": {
                                                    "value": "@activity('Lookup_connection_table').output.firstRow.UserName",
                                                    "type": "Expression"
                                                },
                                                "KV_SecretName": {
                                                    "value": "@activity('Lookup_connection_table').output.firstRow.KeyVaultDetails ",
                                                    "type": "Expression"
                                                },
                                                "key_vault_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "adls2_parquet_file",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "target_dir": {
                                                    "value": "@concat(pipeline().parameters.target_dir_landing, '/', pipeline().parameters.target_path_landing,pipeline().parameters.target_file_nm_landing,'/','day=',formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd'),'/hr=',utcnow('hh')\n,'/', pipeline().parameters.target_file_nm_landing,'_',pipeline().TriggerTime)",
                                                    "type": "Expression"
                                                },
                                                "target_file_system": {
                                                    "value": "@pipeline().parameters.storage_container_landing",
                                                    "type": "Expression"
                                                },
                                                "file_path": " ",
                                                "storage_account_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Landing_Table_Failure_alert",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Failed] - for @{pipeline().parameters.target_file_nm_landing}\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load is failed for @{pipeline().parameters.target_file_nm_landing}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Audit-Insert_Failed_Log",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertAuditLog]",
                                        "storedProcedureParameters": {
                                            "DataFactoryName": {
                                                "value": {
                                                    "value": "@pipeline().DataFactory",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfRunId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfJobId": {
                                                "value": {
                                                    "value": "@pipeline().TriggerTime",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EffectiveIntegrationRuntime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.effectiveIntegrationRuntime}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuingDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].detailedDurations.queuingDuration}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartTime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].start}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EndTime": {
                                                "value": {
                                                    "value": "@addseconds(string(activity('Copy_data_from_source_sink').output.executionDetails[0].start),activity('Copy_data_from_source_sink').output.copyDuration)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "CopyDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.copyDuration}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "NoParallelCopies": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.usedParallelCopies}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "SourceTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsRead}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTableCount": {
                                                "value": {
                                                    "value": "0",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorCode": {
                                                "value": {
                                                    "value": "@string(activity('Copy_data_from_source_sink').output.Errors[0].Code)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "@string(activity('Copy_data_from_source_sink').output.Errors[0].message)",
                                                    "type": "Expression"
                                                }
                                            },
                                            "StoredProcExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "pipeline_name": {
                                                "value": {
                                                    "value": "@{pipeline().Pipeline}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "SourceTable": {
                                                "value": {
                                                    "value": "@pipeline().parameters.SourceTable",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTable": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TargetTable",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Env": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Env",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Layer": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Layer",
                                                    "type": "Expression"
                                                }
                                            },
                                            "process_name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.process_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "interface_name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.interface_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "details": {
                                                "value": {
                                                    "value": "@concat('{',pipeline().parameters.zloaddate_col_nm,':\"',item().DATES,'\"}')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Audit-Insert_Success_Log",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertAuditLog]",
                                        "storedProcedureParameters": {
                                            "DataFactoryName": {
                                                "value": {
                                                    "value": "@pipeline().DataFactory",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfRunId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfJobId": {
                                                "value": {
                                                    "value": "@pipeline().TriggerTime",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EffectiveIntegrationRuntime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.effectiveIntegrationRuntime}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuingDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].detailedDurations.queuingDuration}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartTime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].start}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EndTime": {
                                                "value": {
                                                    "value": "@addseconds(string(activity('Copy_data_from_source_sink').output.executionDetails[0].start),activity('Copy_data_from_source_sink').output.copyDuration)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "CopyDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.copyDuration}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "NoParallelCopies": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.usedParallelCopies}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "SourceTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsRead}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsCopied}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorCode": {
                                                "value": {
                                                    "value": "''",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorMessage": {
                                                "value": "''"
                                            },
                                            "StoredProcExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "pipeline_name": {
                                                "value": {
                                                    "value": "@{pipeline().Pipeline}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "SourceTable": {
                                                "value": {
                                                    "value": "@pipeline().parameters.SourceTable",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTable": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TargetTable",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Env": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Env",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Layer": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Layer",
                                                    "type": "Expression"
                                                }
                                            },
                                            "process_name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.process_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "interface_name": {
                                                "value": {
                                                    "value": "@pipeline().parameters.SourceTable",
                                                    "type": "Expression"
                                                }
                                            },
                                            "details": {
                                                "value": {
                                                    "value": "@concat('{',pipeline().parameters.zloaddate_col_nm,':\"',item().DATES,'\"}')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Terminate Pipeline to break loop",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Landing_Table_Failure_alert",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "Audit-Insert_Failed_Log",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "Update Pipeline Config",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@concat(\n            'https://management.azure.com/subscriptions/',pipeline().globalParameters.SUBSCRIPTION_ID,\n            '/resourceGroups/',pipeline().globalParameters.RESOURCE_GROUP_NAME,\n            '/providers/Microsoft.DataFactory/factories/',pipeline().DataFactory,\n            '/pipelineruns/',pipeline().RunId,\n            '/cancel?isRecursive=true&api-version=2018-06-01'\n        )",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{}",
                                            "type": "Expression"
                                        },
                                        "authentication": {
                                            "type": "MSI",
                                            "resource": {
                                                "value": "@pipeline().globalParameters.AZURE_RESOURCEVALUE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Update Pipeline Config",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[UpdateEndDatePipelineConfig]",
                                        "storedProcedureParameters": {
                                            "landing_last_end_date": {
                                                "value": {
                                                    "value": "@item().DATES",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Id": {
                                                "value": {
                                                    "value": "@pipeline().parameters.Id",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "Get_Distinct_dates": {
                        "type": "array"
                    },
                    "zloaddate_col_nm": {
                        "type": "string"
                    },
                    "partition_col_nm": {
                        "type": "string"
                    },
                    "target_dir_landing": {
                        "type": "string"
                    },
                    "storage_container_landing": {
                        "type": "string"
                    },
                    "target_path_landing": {
                        "type": "string"
                    },
                    "target_file_nm_landing": {
                        "type": "string"
                    },
                    "source_query_dml": {
                        "type": "string"
                    },
                    "SourceTable": {
                        "type": "string"
                    },
                    "TargetTable": {
                        "type": "string"
                    },
                    "Env": {
                        "type": "string"
                    },
                    "Layer": {
                        "type": "string"
                    },
                    "process_name": {
                        "type": "string"
                    },
                    "interface_name": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "string"
                    },
                    "landing_start_date": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "FDP/history_load"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T05:07:22Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/datasets/SapHanaTable')]",
                "[concat(variables('factoryId'), '/datasets/adls2_parquet_file')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sql_server_rds_parametrized')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_reporting_aggregate')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "DML Executor Utility",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/dml_executor_utility",
                                        "baseParameters": {
                                            "gold_dml": {
                                                "value": "@item().gold_dml",
                                                "type": "Expression"
                                            },
                                            "target_table_identifier": {
                                                "value": "@item().gold_table_name",
                                                "type": "Expression"
                                            },
                                            "LAYER": {
                                                "value": "@item().gold_storage_layer",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().silver_table_name",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "adf_job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "options": {
                                                "value": "{}",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@string(item().source_table_name)",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Success_Mail_Alert",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "DML Executor Utility",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Failure_Mail_Alert",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "DML Executor Utility",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "DML Executor Utility",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nid,\nprocess_name,\nsource_table_name,\ngold_table_full_path,\ngold_ddl_file_path,\nsilver_table_name,\ngold_table_name,\ngold_storage_layer,\nis_gold_enable,\nenv,\ngold_dml,\nbusiness_unit,\nsegment_name,\nsource_system_name,\nis_dimension\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='COPA_REPORTING_AGGREGATE'\nand interface_active='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/reporting_aggregate"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T05:07:22Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Create Table Utility')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Create table utility",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/create_tables_utility",
                                        "baseParameters": {
                                            "table_ddl_file_path": {
                                                "value": "@item().gold_ddl_file_path",
                                                "type": "Expression"
                                            },
                                            "target_table_identifier": {
                                                "value": "@item().gold_table_name",
                                                "type": "Expression"
                                            },
                                            "delta_path": {
                                                "value": "@item().gold_table_full_path",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedServiceInteractiveCluster",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_ID",
                                                "type": "Expression"
                                            },
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select\nid, \nenv, \nprocess_name,\ninterface_active,\nlanding_storage_layer,\nlanding_storage_account,\nlanding_storage_container,\nlanding_target_full_path,\nbronze_storage_container,\nbronze_storage_account,\nbronze_table_name,\nbronze_storage_layer,\nbronze_table_delta_path,\nbronze_write_mode,\ninterface_desc, \nsource_table_name,\nprocess_type,\nlanding_target_dir,\nlanding_target_path,\nbronze_ddl_file_path,\nlanding_target_file_nm,\nsource_delta_col,\nsource_delta_val,\nsource_delta_op,\nsilver_table_name,\nsilver_storage_layer,\nsilver_table_delta_path,\nsilver_enable_dq_checks,\nsilver_table_full_path,\nsilver_dq_config_id,\nsilver_ddl_file_path,\nbronze_table_full_path,\ngold_table_name,\ngold_ddl_file_path,\ngold_table_full_path\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name in ('COPA_REPORTING_AGGREGATE', 'BHP_Delta_DSO_Table','BPC_Forecast_Plan','FLAT_FILE_SAC_HIERARCHY','BHP_Master_Table')\nand interface_active  = 'Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Tests_Folder"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T07:44:48Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedServiceInteractiveCluster')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_fullload_master_bronze')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nprocess_name,\nsource_table_name,\nbronze_table_name,\nbronze_table_full_path,\nlanding_target_dir,\nlanding_target_path,\nlanding_target_file_nm,\nbronze_table_delta_path,\nlanding_storage_container,\nlanding_storage_account,\nbronze_write_mode,\nenv,\nbronze_ddl_file_path\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BHP_Master_Table'\nand interface_active='Y'\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "bronze_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/landing_to_bronze_ingestion",
                                        "baseParameters": {
                                            "target_table_identifier": {
                                                "value": "@item().bronze_table_name",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "target_data_path": {
                                                "value": "@item().bronze_table_full_path",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@concat('abfss://',item().landing_storage_container,'@',item().landing_storage_account,'.dfs.core.windows.net/',item().landing_target_dir,'/',item().landing_target_path,item().landing_target_file_nm,'/')\n",
                                                "type": "Expression"
                                            },
                                            "write_mode": {
                                                "value": "@item().bronze_write_mode",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "table_ddl_file_path": {
                                                "value": "@item().bronze_ddl_file_path",
                                                "type": "Expression"
                                            },
                                            "bad_record_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/badrecord/'\n)",
                                                "type": "Expression"
                                            },
                                            "schema_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/schema')",
                                                "type": "Expression"
                                            },
                                            "checkpoint_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "bronze_write_mode": {
                                                "value": "@item().bronze_write_mode\n",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Web_Fail_Bronze",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "bronze_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze] [Failed] for @{item().landing_target_file_nm}\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "bronze_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze][Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load completed. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":@{pipeline().globalParameters.EMAIL_RECEIPT},\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load is failed. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/master_load"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:18:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_copa_raw_bronze')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select \nid,\nprocess_name,\nsource_table_name,\nbronze_table_name,\nbronze_table_full_path,\nbronze_write_mode,\nlanding_target_dir,\nlanding_target_path,\nlanding_target_file_nm,\nbronze_table_delta_path,\nlanding_storage_container,\nlanding_storage_account,\nenv,\nbronze_ddl_file_path \nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BHP_Delta_DSO_Table'\nand interface_active ='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "bronze_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/landing_to_bronze_ingestion",
                                        "baseParameters": {
                                            "target_table_identifier": {
                                                "value": "@item().bronze_table_name",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "target_data_path": {
                                                "value": "@item().bronze_table_full_path\n",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@concat('abfss://',item().landing_storage_container,'@',item().landing_storage_account,'.dfs.core.windows.net/',item().landing_target_dir,'/',item().landing_target_path,item().landing_target_file_nm,'/')\n\n",
                                                "type": "Expression"
                                            },
                                            "bronze_write_mode": {
                                                "value": "@item().bronze_write_mode",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "table_ddl_file_path": {
                                                "value": "@item().bronze_ddl_file_path",
                                                "type": "Expression"
                                            },
                                            "bad_record_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/badrecord/'\n)",
                                                "type": "Expression"
                                            },
                                            "schema_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/schema')",
                                                "type": "Expression"
                                            },
                                            "checkpoint_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Web_Fail_Bronze",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "bronze_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze] [Failed] - for @{item().landing_target_file_nm}\" ,\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "bronze_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Web_Success",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze] [Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load completed for fact tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Web_Fail",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load is failed for fact tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/copa_raw"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:18:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_copa_bex_gold')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nid,\nprocess_name,\nsource_table_name,\nsilver_table_name,\ngold_table_full_path,\ngold_ddl_file_path,\ngold_table_name,\ngold_storage_layer,\nis_gold_enable,\nenv,\nsilver_table_housekeeping_column_list,\nsilver_table_full_path,\ngold_dml,\nbusiness_unit,\nsegment_name,\nsource_system_name,\nis_dimension,\nlanding_target_file_nm,\nGOLD_LAST_UPDATED_CDC_VERS\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BHP_COPA_BEX_ACTUALS'\nand interface_active = 'Y'\n\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "GET_MAX_SRC_LOAD_DATE_ACTUAL_TABLE",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "UPDATE_ZLOADDATE",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "UPDATE_LAST_CDC_VERS",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(or(equals(activity('GET_MAX_SRC_LOAD_DATE_ACTUAL_TABLE').status ,'Failed'),equals(activity('UPDATE_ZLOADDATE').status ,'Failed')),equals(activity('gold_layer_ingestion').status ,'Failed'))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Fail_task",
                                                "type": "Fail",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "message": "Pipeline Failed",
                                                    "errorCode": "500"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "gold_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/silver_to_gold_ingestion",
                                        "baseParameters": {
                                            "options": {
                                                "value": "{}",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().silver_table_name",
                                                "type": "Expression"
                                            },
                                            "target_table_identifier": {
                                                "value": "@item().gold_table_name",
                                                "type": "Expression"
                                            },
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "adf_job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "LAYER": {
                                                "value": "@item().gold_storage_layer",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "housekeeping_column_list": {
                                                "value": "@item().silver_table_housekeeping_column_list",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@item().silver_table_full_path",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_gold": {
                                                "value": "@concat(item().gold_table_full_path, '/bex_checkpoint/checkpoint')\n",
                                                "type": "Expression"
                                            },
                                            "gold_dml": {
                                                "value": "@item().gold_dml",
                                                "type": "Expression"
                                            },
                                            "business_unit": {
                                                "value": "@item().business_unit",
                                                "type": "Expression"
                                            },
                                            "segment_name": {
                                                "value": "@item().segment_name",
                                                "type": "Expression"
                                            },
                                            "source_system_name": {
                                                "value": "@item().source_system_name",
                                                "type": "Expression"
                                            },
                                            "is_dimension": {
                                                "value": "@item().is_dimension",
                                                "type": "Expression"
                                            },
                                            "gold_last_processed_version": {
                                                "value": "@string(item().GOLD_LAST_UPDATED_CDC_VERS)",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Web_Fail_gold",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "UPDATE_ZLOADDATE",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GET_MAX_SRC_LOAD_DATE_ACTUAL_TABLE",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "[[dbo].[UpdatePipelineConfigOnId]",
                                            "type": "Expression"
                                        },
                                        "storedProcedureParameters": {
                                            "value": {
                                                "value": {
                                                    "value": "@{activity('GET_MAX_SRC_LOAD_DATE_ACTUAL_TABLE').output.runOutput['src_load_date']}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ID": {
                                                "value": {
                                                    "value": "@item().id",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "key": {
                                                "value": {
                                                    "value": "source_delta_val",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "GET_MAX_SRC_LOAD_DATE_ACTUAL_TABLE",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/get_max_src_load_date_actual_table",
                                        "baseParameters": {
                                            "target_table_identifier": {
                                                "value": "@item().gold_table_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task_for_if",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "If Condition1",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                },
                                {
                                    "name": "GOLD_LAST_UPDATED_CDC_VERS",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/get_last_updated_version_source_table",
                                        "baseParameters": {
                                            "source_table_name": {
                                                "value": "@item().silver_table_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "UPDATE_LAST_CDC_VERS",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GOLD_LAST_UPDATED_CDC_VERS",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "[[dbo].[UpdatePipelineConfigOnId]",
                                            "type": "Expression"
                                        },
                                        "storedProcedureParameters": {
                                            "value": {
                                                "value": {
                                                    "value": "@{activity('GOLD_LAST_UPDATED_CDC_VERS').output.runOutput['last_updated_version_source_table']}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ID": {
                                                "value": {
                                                    "value": "@item().id",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "key": {
                                                "value": {
                                                    "value": "GOLD_LAST_UPDATED_CDC_VERS",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/copa_actuals"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:18:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sql_server_rds_parametrized')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_fulload_master_gold')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nid,\nprocess_name,\nsource_table_name,\nsilver_table_name,\ngold_table_full_path,\ngold_ddl_file_path,\ngold_table_name,\ngold_storage_layer,\nis_gold_enable,\nenv,\nsilver_table_housekeeping_column_list,\nsilver_table_full_path,\ngold_dml,\nbusiness_unit,\nsegment_name,\nsource_system_name,\nis_dimension,\nlanding_target_file_nm,\nGOLD_LAST_UPDATED_CDC_VERS\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BHP_Master_Table'\nand interface_active='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "gold_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/silver_to_gold_ingestion",
                                        "baseParameters": {
                                            "options": {
                                                "value": "{}",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().silver_table_name",
                                                "type": "Expression"
                                            },
                                            "target_table_identifier": {
                                                "value": "@item().gold_table_name",
                                                "type": "Expression"
                                            },
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "adf_job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "LAYER": {
                                                "value": "@item().gold_storage_layer",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "housekeeping_column_list": {
                                                "value": "@item().silver_table_housekeeping_column_list",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@item().silver_table_full_path",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_gold": {
                                                "value": "@concat(item().gold_table_full_path, '/checkpoint')",
                                                "type": "Expression"
                                            },
                                            "gold_dml": {
                                                "value": "@item().gold_dml",
                                                "type": "Expression"
                                            },
                                            "business_unit": {
                                                "value": "@item().business_unit",
                                                "type": "Expression"
                                            },
                                            "segment_name": {
                                                "value": "@item().segment_name",
                                                "type": "Expression"
                                            },
                                            "source_system_name": {
                                                "value": "@item().source_system_name",
                                                "type": "Expression"
                                            },
                                            "is_dimension": {
                                                "value": "@item().is_dimension",
                                                "type": "Expression"
                                            },
                                            "gold_last_processed_version": {
                                                "value": "@string(item().GOLD_LAST_UPDATED_CDC_VERS)",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Web_Fail_gold",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "GOLD_LAST_UPDATED_CDC_VERS",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/get_last_updated_version_source_table",
                                        "baseParameters": {
                                            "source_table_name": {
                                                "value": "@item().silver_table_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "UPDATE_LAST_CDC_VERS",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GOLD_LAST_UPDATED_CDC_VERS",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "[[dbo].[UpdatePipelineConfigOnId]",
                                            "type": "Expression"
                                        },
                                        "storedProcedureParameters": {
                                            "value": {
                                                "value": {
                                                    "value": "@{activity('GOLD_LAST_UPDATED_CDC_VERS').output.runOutput['last_updated_version_source_table']}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ID": {
                                                "value": {
                                                    "value": "@item().id",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "key": {
                                                "value": {
                                                    "value": "GOLD_LAST_UPDATED_CDC_VERS",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "GOLD_LAST_UPDATED_CDC_VERS",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "UPDATE_LAST_CDC_VERS",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "If Q table",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@if(\n    or(or(\n        contains(toLower(item().gold_table_name),'q_customer'),\n        contains(toLower(item().gold_table_name),'q_ven_compc')\n       ),\n        contains(toLower(item().gold_table_name),'q_material')\n    ),\n    or(\n        or(\n            or(\n                equals(activity('GET_MAX_START_END_DATE_DIM_TABLE').status ,'Failed'),\n                equals(activity('GOLD_LAST_UPDATED_CDC_VERS').status ,'Failed')\n            ),\n            equals(activity('gold_layer_ingestion').status ,'Failed')\n        ),\n        or(\n            equals(activity('UPDATE_END_DATE').status ,'Failed'),\n            equals(activity('UPDATE_START_DATE').status ,'Failed')\n        )\n    ),\n    or(\n                equals(activity('gold_layer_ingestion').status ,'Failed'),\n                equals(activity('GOLD_LAST_UPDATED_CDC_VERS').status ,'Failed')\n        )\n)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Fail_task",
                                                "type": "Fail",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "message": "Pipeline Failed",
                                                    "errorCode": "500"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Fail_task_for_if",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "If Condition1",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                },
                                {
                                    "name": "If Q table",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(or(contains(toLower(item().gold_table_name),'q_customer'),contains(toLower(item().gold_table_name),'q_ven_compc')),contains(toLower(item().gold_table_name),'q_material'))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "UPDATE_START_DATE",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "GET_MAX_START_END_DATE_DIM_TABLE",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "0.12:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "[[dbo].[UpdatePipelineConfigOnId]",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "value": {
                                                            "value": {
                                                                "value": "@{activity('GET_MAX_START_END_DATE_DIM_TABLE').output.runOutput['last_start_date_load_landing']}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ID": {
                                                            "value": {
                                                                "value": "@item().id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "key": {
                                                            "value": {
                                                                "value": "landing_last_start_date",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "ServerName": {
                                                            "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                            "type": "Expression"
                                                        },
                                                        "UserName": {
                                                            "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                            "type": "Expression"
                                                        },
                                                        "KV_SecretName": {
                                                            "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                            "type": "Expression"
                                                        },
                                                        "SQLDatabaseName": {
                                                            "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                            "type": "Expression"
                                                        },
                                                        "key_vault_url": {
                                                            "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "GET_MAX_START_END_DATE_DIM_TABLE",
                                                "type": "DatabricksNotebook",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.12:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/get_max_start_end_date_dim_table",
                                                    "baseParameters": {
                                                        "target_table_identifier": {
                                                            "value": "@item().gold_table_name",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AzureDatabricksLinkedService",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "workspace_url": {
                                                            "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                            "type": "Expression"
                                                        },
                                                        "workspace_resource_id": {
                                                            "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                            "type": "Expression"
                                                        },
                                                        "cluster_version": {
                                                            "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                            "type": "Expression"
                                                        },
                                                        "node_type": {
                                                            "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                            "type": "Expression"
                                                        },
                                                        "driver_type": {
                                                            "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "UPDATE_END_DATE",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "GET_MAX_START_END_DATE_DIM_TABLE",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "0.12:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": {
                                                        "value": "[[dbo].[UpdatePipelineConfigOnId]",
                                                        "type": "Expression"
                                                    },
                                                    "storedProcedureParameters": {
                                                        "value": {
                                                            "value": {
                                                                "value": "@{activity('GET_MAX_START_END_DATE_DIM_TABLE').output.runOutput['last_end_date_loading']}",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ID": {
                                                            "value": {
                                                                "value": "@item().id",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int32"
                                                        },
                                                        "key": {
                                                            "value": {
                                                                "value": "landing_last_end_date",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "ServerName": {
                                                            "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                            "type": "Expression"
                                                        },
                                                        "UserName": {
                                                            "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                            "type": "Expression"
                                                        },
                                                        "KV_SecretName": {
                                                            "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                            "type": "Expression"
                                                        },
                                                        "SQLDatabaseName": {
                                                            "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                            "type": "Expression"
                                                        },
                                                        "key_vault_url": {
                                                            "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/master_load"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:18:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sql_server_rds_parametrized')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_fullload_master_landing')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select\nid,\nsource_table_name,\nprocess_name,\nlanding_storage_account,\nlanding_storage_container,\nlanding_target_dir,\nlanding_target_path,\nlanding_target_file_nm,\nsource_query_dml,\nlanding_last_start_date,\nlanding_last_end_date,\nsource_delta_col,\nsource_delta_val,\nsource_delta_op,\nlanding_target_full_path,\nlanding_storage_layer,\nenv\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BHP_Master_Table'\n and interface_active='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "Copy_data_from_source_sink",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Lookup_connection_table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SapHanaSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "ADF_RUN_ID",
                                                    "value": {
                                                        "value": "@pipeline().RunId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "ADF_JOB_ID",
                                                    "value": {
                                                        "value": "@pipeline().TriggerId",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "query": {
                                                "value": "@replace(replace(item().source_query_dml, '$$landing_last_start_date', coalesce(item().landing_last_start_date, '')), '$$landing_last_end_date', coalesce(item().landing_last_end_date, ''))\n\n\n\n",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "ParquetSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "ParquetWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "SapHanaTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ServerName": {
                                                    "value": "@activity('Lookup_connection_table').output.firstRow.ServerName",
                                                    "type": "Expression"
                                                },
                                                "UserName": {
                                                    "value": "@activity('Lookup_connection_table').output.firstRow.UserName",
                                                    "type": "Expression"
                                                },
                                                "KV_SecretName": {
                                                    "value": "@activity('Lookup_connection_table').output.firstRow.KeyVaultDetails",
                                                    "type": "Expression"
                                                },
                                                "key_vault_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "adls2_parquet_file",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "target_dir": {
                                                    "value": "@item().landing_target_dir",
                                                    "type": "Expression"
                                                },
                                                "target_file_system": {
                                                    "value": "@item().landing_storage_container",
                                                    "type": "Expression"
                                                },
                                                "file_path": {
                                                    "value": "@concat(item().landing_target_path,item().landing_target_file_nm,'/','day=',formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd'),'/hr=',formatDateTime(pipeline().TriggerTime, 'hh')\n,'/',item().landing_target_file_nm,'_',pipeline().TriggerTime)",
                                                    "type": "Expression"
                                                },
                                                "storage_account_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Lookup_connection_table",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AmazonRdsForSqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('Select Id, ServerName, UserName, KeyVaultDetails from ', pipeline().globalParameters.SQLSERVER_SAP_CONNECTION_TABLENAME, ' where Env=''', pipeline().globalParameters.SAP_BW_ENV, '''')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "SqlServerTableParametrized",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ServerName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                    "type": "Expression"
                                                },
                                                "UserName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                    "type": "Expression"
                                                },
                                                "KV_SecretName": {
                                                    "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                    "type": "Expression"
                                                },
                                                "SQLDatabaseName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                    "type": "Expression"
                                                },
                                                "key_vault_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Landing_Table_Failure_alert",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Failed] - for @{item().landing_target_file_nm}\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load is failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Stored procedure_failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertAuditLog]",
                                        "storedProcedureParameters": {
                                            "DataFactoryName": {
                                                "value": {
                                                    "value": "@pipeline().DataFactory",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfRunId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfJobId": {
                                                "value": {
                                                    "value": "@pipeline().TriggerTime",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EffectiveIntegrationRuntime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.effectiveIntegrationRuntime}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuingDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].detailedDurations.queuingDuration}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartTime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].start}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EndTime": {
                                                "value": {
                                                    "value": "@addseconds(string(activity('Copy_data_from_source_sink').output.executionDetails[0].start),activity('Copy_data_from_source_sink').output.copyDuration)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "CopyDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.copyDuration}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "NoParallelCopies": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.usedParallelCopies}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "SourceTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsRead}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTableCount": {
                                                "value": {
                                                    "value": "0",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorCode": {
                                                "value": {
                                                    "value": "@string(activity('Copy_data_from_source_sink').output.Errors[0].Code)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "@string(activity('Copy_data_from_source_sink').output.Errors[0].message)",
                                                    "type": "Expression"
                                                }
                                            },
                                            "StoredProcExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "pipeline_name": {
                                                "value": {
                                                    "value": "@{pipeline().Pipeline}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ControlTableId": {
                                                "value": "0",
                                                "type": "Int64"
                                            },
                                            "SourceTable": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTable": {
                                                "value": {
                                                    "value": "@item().landing_target_full_path",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Env": {
                                                "value": {
                                                    "value": "@item().env",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Layer": {
                                                "value": {
                                                    "value": "@item().landing_storage_layer\n",
                                                    "type": "Expression"
                                                }
                                            },
                                            "process_name": {
                                                "value": {
                                                    "value": "@item().process_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "interface_name": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "details": {
                                                "value": "''"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Stored procedure Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertAuditLog]",
                                        "storedProcedureParameters": {
                                            "DataFactoryName": {
                                                "value": {
                                                    "value": "@pipeline().DataFactory",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfRunId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfJobId": {
                                                "value": {
                                                    "value": "@pipeline().TriggerTime",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EffectiveIntegrationRuntime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.effectiveIntegrationRuntime}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuingDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].detailedDurations.queuingDuration}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartTime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].start}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EndTime": {
                                                "value": {
                                                    "value": "@addseconds(string(activity('Copy_data_from_source_sink').output.executionDetails[0].start),activity('Copy_data_from_source_sink').output.copyDuration)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "CopyDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.copyDuration}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "NoParallelCopies": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.usedParallelCopies}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "SourceTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsRead}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsCopied}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorCode": {
                                                "value": {
                                                    "value": "''",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorMessage": {
                                                "value": "''"
                                            },
                                            "StoredProcExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "pipeline_name": {
                                                "value": {
                                                    "value": "@{pipeline().Pipeline}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ControlTableId": {
                                                "value": "0",
                                                "type": "Int64"
                                            },
                                            "SourceTable": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTable": {
                                                "value": {
                                                    "value": "@item().landing_target_full_path",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Env": {
                                                "value": {
                                                    "value": "@item().env",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Layer": {
                                                "value": {
                                                    "value": "@item().landing_storage_layer\n",
                                                    "type": "Expression"
                                                }
                                            },
                                            "process_name": {
                                                "value": {
                                                    "value": "@item().process_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "interface_name": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "details": {
                                                "value": "''"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Stored procedure Success",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "Stored procedure_failure",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(or(equals(activity('Copy_data_from_source_sink').status ,'Failed'),equals(activity('Stored procedure Success').status ,'Failed')),equals(activity('Stored procedure_failure').status ,'Failed'))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Fail_task",
                                                "type": "Fail",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "message": "Pipeline Failed",
                                                    "errorCode": "500"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Fail_task_for_if",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "If Condition1",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/master_load"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:18:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/datasets/SapHanaTable')]",
                "[concat(variables('factoryId'), '/datasets/adls2_parquet_file')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sql_server_rds_parametrized')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_copa_raw_landing')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nsource_table_name,\nprocess_name,\nlanding_storage_account,\nlanding_storage_container,\nlanding_target_dir,\nlanding_target_path,\nlanding_target_file_nm,\nsource_query_dml,\nlanding_last_start_date,\nlanding_last_end_date,\nsource_delta_col,\nsource_delta_val,\nsource_delta_op,\nlanding_target_full_path,\nlanding_storage_layer,\nenv\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name = 'BHP_Delta_DSO_Table' and interface_active='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "Copy_data_from_source_sink",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Lookup_connection_table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SapHanaSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "pipeline_name",
                                                    "value": {
                                                        "value": "@pipeline().Pipeline",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "adf_run_id",
                                                    "value": {
                                                        "value": "@pipeline().RunId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "adf_job_id",
                                                    "value": {
                                                        "value": "@pipeline().TriggerId",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "query": {
                                                "value": "@replace(replace(item().source_query_dml, '$$landing_last_start_date', coalesce(item().landing_last_start_date, '')), '$$landing_last_end_date', coalesce(item().landing_last_end_date, ''))\n\n\n\n",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "ParquetSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "ParquetWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "SapHanaTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ServerName": {
                                                    "value": "@activity('Lookup_connection_table').output.firstRow.ServerName",
                                                    "type": "Expression"
                                                },
                                                "UserName": {
                                                    "value": "@activity('Lookup_connection_table').output.firstRow.UserName",
                                                    "type": "Expression"
                                                },
                                                "KV_SecretName": {
                                                    "value": "@activity('Lookup_connection_table').output.firstRow.KeyVaultDetails ",
                                                    "type": "Expression"
                                                },
                                                "key_vault_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "adls2_parquet_file",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "target_dir": "@item().landing_target_dir",
                                                "target_file_system": "@item().landing_storage_container",
                                                "file_path": "/",
                                                "storage_account_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Lookup_connection_table",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AmazonRdsForSqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('Select Id, ServerName, UserName, KeyVaultDetails from ', pipeline().globalParameters.SQLSERVER_SAP_CONNECTION_TABLENAME, ' where Env=''', pipeline().globalParameters.SAP_BW_ENV, '''')\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "SqlServerTableParametrized",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ServerName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                    "type": "Expression"
                                                },
                                                "UserName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                    "type": "Expression"
                                                },
                                                "KV_SecretName": {
                                                    "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                    "type": "Expression"
                                                },
                                                "SQLDatabaseName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                    "type": "Expression"
                                                },
                                                "key_vault_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Landing_Table_Failure_alert",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "connectVia": {
                                            "referenceName": "FDP-SHIR",
                                            "type": "IntegrationRuntimeReference"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Failed] - for @{item().target_file_nm_landing}\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load is failed for @{item().target_file_nm_landing}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Stored procedure_failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertAuditLog]",
                                        "storedProcedureParameters": {
                                            "DataFactoryName": {
                                                "value": {
                                                    "value": "@pipeline().DataFactory",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfRunId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfJobId": {
                                                "value": {
                                                    "value": "@pipeline().TriggerTime",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EffectiveIntegrationRuntime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.effectiveIntegrationRuntime}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuingDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].detailedDurations.queuingDuration}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartTime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].start}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EndTime": {
                                                "value": {
                                                    "value": "@addseconds(string(activity('Copy_data_from_source_sink').output.executionDetails[0].start),activity('Copy_data_from_source_sink').output.copyDuration)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "CopyDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.copyDuration}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "NoParallelCopies": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.usedParallelCopies}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "SourceTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsRead}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTableCount": {
                                                "value": {
                                                    "value": "0",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorCode": {
                                                "value": {
                                                    "value": "@string(activity('Copy_data_from_source_sink').output.Errors[0].Code)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "@string(activity('Copy_data_from_source_sink').output.Errors[0].message)",
                                                    "type": "Expression"
                                                }
                                            },
                                            "StoredProcExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "pipeline_name": {
                                                "value": {
                                                    "value": "@{pipeline().Pipeline}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ControlTableId": {
                                                "value": "0",
                                                "type": "Int64"
                                            },
                                            "SourceTable": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTable": {
                                                "value": {
                                                    "value": "@item().landing_target_full_path",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Env": {
                                                "value": {
                                                    "value": "@item().env",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Layer": {
                                                "value": {
                                                    "value": "@item().landing_storage_layer\n",
                                                    "type": "Expression"
                                                }
                                            },
                                            "process_name": {
                                                "value": {
                                                    "value": "@item().process_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "interface_name": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Stored procedure Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertAuditLog]",
                                        "storedProcedureParameters": {
                                            "DataFactoryName": {
                                                "value": {
                                                    "value": "@pipeline().DataFactory",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfRunId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfJobId": {
                                                "value": {
                                                    "value": "@pipeline().TriggerTime",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EffectiveIntegrationRuntime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.effectiveIntegrationRuntime}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuingDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].detailedDurations.queuingDuration}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartTime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].start}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EndTime": {
                                                "value": {
                                                    "value": "@addseconds(string(activity('Copy_data_from_source_sink').output.executionDetails[0].start),activity('Copy_data_from_source_sink').output.copyDuration)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "CopyDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.copyDuration}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "NoParallelCopies": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.usedParallelCopies}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "SourceTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsRead}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsCopied}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorCode": {
                                                "value": {
                                                    "value": "''",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorMessage": {
                                                "value": "''"
                                            },
                                            "StoredProcExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "pipeline_name": {
                                                "value": {
                                                    "value": "@{pipeline().Pipeline}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ControlTableId": {
                                                "value": "0",
                                                "type": "Int64"
                                            },
                                            "SourceTable": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTable": {
                                                "value": {
                                                    "value": "@item().landing_target_full_path",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Env": {
                                                "value": {
                                                    "value": "@item().env",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Layer": {
                                                "value": {
                                                    "value": "@item().landing_storage_layer\n",
                                                    "type": "Expression"
                                                }
                                            },
                                            "process_name": {
                                                "value": {
                                                    "value": "@item().process_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "interface_name": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Stored procedure Success",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "Stored procedure_failure",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(or(equals(activity('Copy_data_from_source_sink').status ,'Failed'),equals(activity('Stored procedure Success').status ,'Failed')),equals(activity('Stored procedure_failure').status ,'Failed'))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Fail_task",
                                                "type": "Fail",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "message": "Pipeline Failed",
                                                    "errorCode": "500"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Fail_task_for_if",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "If Condition1",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "FDP-SHIR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load completed for fact tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "connectVia": {
                                "referenceName": "FDP-SHIR",
                                "type": "IntegrationRuntimeReference"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load is failed for fact tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail1",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "500",
                            "errorCode": "Failed"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/copa_raw"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:18:57Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/FDP-SHIR')]",
                "[concat(variables('factoryId'), '/datasets/SapHanaTable')]",
                "[concat(variables('factoryId'), '/datasets/adls2_parquet_file')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sql_server_rds_parametrized')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_vw_copa_actuals_combined')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "DML Executor Utility",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/dml_executor_utility",
                                        "baseParameters": {
                                            "gold_dml": {
                                                "value": "@item().gold_dml",
                                                "type": "Expression"
                                            },
                                            "target_table_identifier": {
                                                "value": "@item().gold_table_name",
                                                "type": "Expression"
                                            },
                                            "LAYER": {
                                                "value": "@item().gold_storage_layer",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().silver_table_name",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "adf_job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "options": {
                                                "value": "{}",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@string(item().source_table_name)",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Success_Mail_Alert_copy1",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "DML Executor Utility",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Failure_Mail_Alert_copy1",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "DML Executor Utility",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "DML Executor Utility",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nid,\nprocess_name,\nsource_table_name,\ngold_table_full_path,\ngold_ddl_file_path,\nsilver_table_name,\ngold_table_name,\ngold_storage_layer,\nis_gold_enable,\nenv,\ngold_dml,\nbusiness_unit,\nsegment_name,\nsource_system_name,\nis_dimension\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='COPA_Profitability_View'\nand interface_active='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/reporting_aggregate"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T05:07:22Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_plan_forecast_landing')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select\nid,\nsource_table_name,\nprocess_name,\nlanding_storage_account,\nlanding_storage_container,\nlanding_target_dir,\nlanding_target_path,\nlanding_target_file_nm,\nsource_query_dml,\nlanding_last_start_date,\nlanding_last_end_date,\nsource_delta_col,\nsource_delta_val,\nsource_delta_op,\nlanding_target_full_path,\nlanding_storage_layer,\nsource_landing_column_map,\nenv\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BPC_Forecast_Plan'\nand interface_active='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "Stored procedure Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertAuditLog]",
                                        "storedProcedureParameters": {
                                            "DataFactoryName": {
                                                "value": {
                                                    "value": "@pipeline().DataFactory",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfRunId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfJobId": {
                                                "value": {
                                                    "value": "@pipeline().TriggerTime",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EffectiveIntegrationRuntime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.effectiveIntegrationRuntime}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuingDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].detailedDurations.queuingDuration}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartTime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].start}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EndTime": {
                                                "value": {
                                                    "value": "@addseconds(string(activity('Copy_data_from_source_sink').output.executionDetails[0].start),activity('Copy_data_from_source_sink').output.copyDuration)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "CopyDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.copyDuration}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "NoParallelCopies": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.usedParallelCopies}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "SourceTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsRead}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsCopied}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorCode": {
                                                "value": {
                                                    "value": "''",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorMessage": {
                                                "value": "''"
                                            },
                                            "StoredProcExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "pipeline_name": {
                                                "value": {
                                                    "value": "@{pipeline().Pipeline}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ControlTableId": {
                                                "value": "0",
                                                "type": "Int64"
                                            },
                                            "SourceTable": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTable": {
                                                "value": {
                                                    "value": "@item().landing_target_full_path",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Env": {
                                                "value": {
                                                    "value": "@item().env",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Layer": {
                                                "value": {
                                                    "value": "@item().landing_storage_layer\n",
                                                    "type": "Expression"
                                                }
                                            },
                                            "process_name": {
                                                "value": {
                                                    "value": "@item().process_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "interface_name": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "details": {
                                                "value": " "
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Landing_Table_Failure_alert",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Failed] - for @{item().landing_target_file_nm}\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load is failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Stored procedure_failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertAuditLog]",
                                        "storedProcedureParameters": {
                                            "DataFactoryName": {
                                                "value": {
                                                    "value": "@pipeline().DataFactory",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfRunId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfJobId": {
                                                "value": {
                                                    "value": "@pipeline().TriggerTime",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EffectiveIntegrationRuntime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.effectiveIntegrationRuntime}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuingDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].detailedDurations.queuingDuration}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartTime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].start}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EndTime": {
                                                "value": {
                                                    "value": "@addseconds(string(activity('Copy_data_from_source_sink').output.executionDetails[0].start),activity('Copy_data_from_source_sink').output.copyDuration)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "CopyDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.copyDuration}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "NoParallelCopies": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.usedParallelCopies}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "SourceTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsRead}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTableCount": {
                                                "value": {
                                                    "value": "0",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorCode": {
                                                "value": {
                                                    "value": "@string(activity('Copy_data_from_source_sink').output.Errors[0].Code)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "@string(activity('Copy_data_from_source_sink').output.Errors[0].message)",
                                                    "type": "Expression"
                                                }
                                            },
                                            "StoredProcExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "pipeline_name": {
                                                "value": {
                                                    "value": "@{pipeline().Pipeline}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ControlTableId": {
                                                "value": "0",
                                                "type": "Int64"
                                            },
                                            "SourceTable": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTable": {
                                                "value": {
                                                    "value": "@item().landing_target_full_path",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Env": {
                                                "value": {
                                                    "value": "@item().env",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Layer": {
                                                "value": {
                                                    "value": "@item().landing_storage_layer\n",
                                                    "type": "Expression"
                                                }
                                            },
                                            "process_name": {
                                                "value": {
                                                    "value": "@item().process_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "interface_name": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "details": {
                                                "value": " "
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Lookup_connection_table",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AmazonRdsForSqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('Select Id, ServerName, UserName, KeyVaultDetails from ', pipeline().globalParameters.SQLSERVER_SAP_CONNECTION_TABLENAME, ' where Env=''', pipeline().globalParameters.SAP_BCP_ENV, '''')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "SqlServerTableParametrized",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ServerName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                    "type": "Expression"
                                                },
                                                "UserName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                    "type": "Expression"
                                                },
                                                "KV_SecretName": {
                                                    "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                    "type": "Expression"
                                                },
                                                "SQLDatabaseName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                    "type": "Expression"
                                                },
                                                "key_vault_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Copy_data_from_source_sink",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Lookup_connection_table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SapBwSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "adf_run_id",
                                                    "value": {
                                                        "value": "@pipeline().RunId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "adf_job_id",
                                                    "value": {
                                                        "value": "@pipeline().TriggerId",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "query": {
                                                "value": "@replace(replace(item().source_query_dml, '$$landing_last_start_date', coalesce(item().landing_last_start_date, '')), '$$landing_last_end_date', coalesce(item().landing_last_end_date, ''))",
                                                "type": "Expression"
                                            }
                                        },
                                        "sink": {
                                            "type": "ParquetSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "ParquetWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "value": "@json(item().source_landing_column_map)",
                                            "type": "Expression"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "FP_bpc_testing",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "adls2_parquet_file",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "target_dir": {
                                                    "value": "@item().landing_target_dir",
                                                    "type": "Expression"
                                                },
                                                "target_file_system": {
                                                    "value": "@item().landing_storage_container",
                                                    "type": "Expression"
                                                },
                                                "file_path": {
                                                    "value": "@concat(item().landing_target_path,item().landing_target_file_nm,'/','day=',formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd'),'/hr=',utcnow('hh')\n,'/',item().landing_target_file_nm,'_',pipeline().TriggerTime)",
                                                    "type": "Expression"
                                                },
                                                "storage_account_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Stored procedure Success",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "Stored procedure_failure",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(or(equals(activity('Copy_data_from_source_sink').status ,'Failed'),equals(activity('Stored procedure Success').status ,'Failed')),equals(activity('Stored procedure_failure').status ,'Failed'))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Fail_task",
                                                "type": "Fail",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "message": "Pipeline Failed",
                                                    "errorCode": "500"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Fail_task_for_if",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "If Condition1",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/plan_and_forecast"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:18:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sql_server_rds_parametrized')]",
                "[concat(variables('factoryId'), '/datasets/FP_bpc_testing')]",
                "[concat(variables('factoryId'), '/datasets/adls2_parquet_file')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_copa_bex_silver')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select \nprocess_name,\nsource_table_name,\nbronze_table_full_path,\nbronze_table_name,\nsilver_table_name,\nsilver_storage_layer,\nlanding_target_file_nm,\nsilver_table_full_path,\nsilver_write_mode,\nsilver_enable_dq_checks,\nsilver_dq_config_id,\nsilver_ddl_file_path,\nsilver_table_housekeeping_column_list,\nenv,\nmd5_flag,\nbronze_table_housekeeping_column_list,\nsilver_dml\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BHP_COPA_BEX_ACTUALS'\nand interface_active = 'Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "silver_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/bronze_to_silver_ingestion",
                                        "baseParameters": {
                                            "target_table_identifier": {
                                                "value": "@item().silver_table_name\n",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().bronze_table_name\n",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "target_data_path": {
                                                "value": "@item().silver_table_full_path\n",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@item().bronze_table_full_path\n\n",
                                                "type": "Expression"
                                            },
                                            "write_mode": {
                                                "value": "@item().silver_write_mode\n",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "table_ddl_file_path": {
                                                "value": "@item().silver_ddl_file_path\n",
                                                "type": "Expression"
                                            },
                                            "dq_config_id": {
                                                "value": "@item().silver_dq_config_id\n",
                                                "type": "Expression"
                                            },
                                            "dq_config_table_name": {
                                                "value": "DLT_DQ_METADATA",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_silver": {
                                                "value": "@concat(item().silver_table_full_path,'/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_silver_invalid": {
                                                "value": "@concat(item().silver_table_full_path,'_invalid','/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "md5_flag": {
                                                "value": "@item().md5_flag",
                                                "type": "Expression"
                                            },
                                            "housekeeping_column_list": {
                                                "value": "@item().bronze_table_housekeeping_column_list",
                                                "type": "Expression"
                                            },
                                            "options": "{}",
                                            "silver_dml": {
                                                "value": "@item().silver_dml",
                                                "type": "Expression"
                                            },
                                            "enable_dq_checks": {
                                                "value": "@item().silver_enable_dq_checks",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Web_fail_silver",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "silver_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver] [Failed]- for @{item().landing_target_file_nm}\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "silver_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver][Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load completed for fact tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load is failed for fact tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/copa_actuals"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T05:07:22Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_adhoc_sac_hierarchy_silver')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nprocess_name,\nsource_table_name,\nbronze_table_full_path,\nbronze_table_name,\nsilver_table_name,\nsilver_storage_layer,\nlanding_target_file_nm,\nsilver_table_full_path,\nsilver_write_mode,\nsilver_enable_dq_checks,\nsilver_dq_config_id,\nenv,\nmd5_flag,\nbronze_table_housekeeping_column_list,\nsilver_dml\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='FLAT_FILE_SAC_HIERARCHY'\nand interface_active='Y'\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "silver_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/bronze_to_silver_ingestion",
                                        "baseParameters": {
                                            "target_table_identifier": {
                                                "value": "@item().silver_table_name\n",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().bronze_table_name\n",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "target_data_path": {
                                                "value": "@item().silver_table_full_path",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@item().bronze_table_full_path\n",
                                                "type": "Expression"
                                            },
                                            "write_mode": {
                                                "value": "@item().silver_write_mode\n",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "dq_config_id": {
                                                "value": "@item().silver_dq_config_id\n",
                                                "type": "Expression"
                                            },
                                            "dq_config_table_name": {
                                                "value": "DLT_DQ_METADATA",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_silver": {
                                                "value": "@concat(item().silver_table_full_path,'/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_silver_invalid": {
                                                "value": "@concat(item().silver_table_full_path,'_invalid','/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "md5_flag": {
                                                "value": "@item().md5_flag",
                                                "type": "Expression"
                                            },
                                            "housekeeping_column_list": {
                                                "value": "@item().bronze_table_housekeeping_column_list",
                                                "type": "Expression"
                                            },
                                            "options": "{}",
                                            "silver_dml": {
                                                "value": "@item().silver_dml",
                                                "type": "Expression"
                                            },
                                            "enable_dq_checks": {
                                                "value": "@item().silver_enable_dq_checks",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Web_Fail_silver",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "silver_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver] [Failed] - for @{item().landing_target_file_nm}\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "silver_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        },
                                        {
                                            "activity": "Web_Fail_silver",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver] [Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            },
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/sac_hierarchy_load"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T05:07:22Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_plan_forecast_silver')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nprocess_name,\nsource_table_name,\nbronze_table_full_path,\nbronze_table_name,\nsilver_table_name,\nsilver_storage_layer,\nlanding_target_file_nm,\nsilver_table_full_path,\nsilver_write_mode,\nsilver_enable_dq_checks,\nsilver_dq_config_id,\nenv,\nmd5_flag,\nbronze_table_housekeeping_column_list,\nsilver_dml\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BPC_Forecast_Plan'\nand interface_active='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Web_Fail_silver",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "silver_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver] [Failed] - for @{item().landing_target_file_nm}\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "silver_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/bronze_to_silver_ingestion",
                                        "baseParameters": {
                                            "target_table_identifier": {
                                                "value": "@item().silver_table_name\n",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().bronze_table_name\n",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "target_data_path": {
                                                "value": "@item().silver_table_full_path",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@item().bronze_table_full_path\n",
                                                "type": "Expression"
                                            },
                                            "write_mode": {
                                                "value": "@item().silver_write_mode\n",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "dq_config_id": {
                                                "value": "@item().silver_dq_config_id\n",
                                                "type": "Expression"
                                            },
                                            "dq_config_table_name": {
                                                "value": "DLT_DQ_METADATA",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_silver": {
                                                "value": "@concat(item().silver_table_full_path,'/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_silver_invalid": {
                                                "value": "@concat(item().silver_table_full_path,'_invalid','/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "md5_flag": {
                                                "value": "@item().md5_flag",
                                                "type": "Expression"
                                            },
                                            "housekeeping_column_list": {
                                                "value": "@item().bronze_table_housekeeping_column_list",
                                                "type": "Expression"
                                            },
                                            "options": "{}",
                                            "silver_dml": {
                                                "value": "@item().silver_dml",
                                                "type": "Expression"
                                            },
                                            "enable_dq_checks": {
                                                "value": "@item().silver_enable_dq_checks",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "silver_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver] [Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/plan_and_forecast"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T09:52:10Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_plan_forecast_gold')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nid,  \nprocess_name,\nsource_table_name,\nsilver_table_name,\ngold_table_full_path,\ngold_ddl_file_path,\ngold_table_name,\ngold_storage_layer,\nis_gold_enable,\nenv,\nsilver_table_housekeeping_column_list,\nsilver_table_full_path,\ngold_dml,\nbusiness_unit,\nsegment_name,\nsource_system_name,\nlanding_target_file_nm,\nis_dimension,\nGOLD_LAST_UPDATED_CDC_VERS\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BPC_Forecast_Plan'\nand interface_active='Y'\nand id = 23",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Web_Fail_gold",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "gold_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/silver_to_gold_ingestion",
                                        "baseParameters": {
                                            "options": {
                                                "value": "{}",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().silver_table_name",
                                                "type": "Expression"
                                            },
                                            "target_table_identifier": {
                                                "value": "@item().gold_table_name",
                                                "type": "Expression"
                                            },
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "adf_job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "LAYER": {
                                                "value": "@item().gold_storage_layer",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "housekeeping_column_list": {
                                                "value": "@item().silver_table_housekeeping_column_list",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@item().silver_table_full_path",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_gold": {
                                                "value": "@concat(item().gold_table_full_path, '/checkpoint')",
                                                "type": "Expression"
                                            },
                                            "gold_dml": {
                                                "value": "@item().gold_dml",
                                                "type": "Expression"
                                            },
                                            "business_unit": {
                                                "value": "@item().business_unit",
                                                "type": "Expression"
                                            },
                                            "segment_name": {
                                                "value": "@item().segment_name",
                                                "type": "Expression"
                                            },
                                            "source_system_name": {
                                                "value": "@item().source_system_name",
                                                "type": "Expression"
                                            },
                                            "is_dimension": {
                                                "value": "@item().is_dimension",
                                                "type": "Expression"
                                            },
                                            "gold_last_processed_version": {
                                                "value": "@string(item().GOLD_LAST_UPDATED_CDC_VERS)",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        },
                                        {
                                            "activity": "GOLD_LAST_UPDATED_CDC_VERS",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        },
                                        {
                                            "activity": "UPDATE_LAST_CDC_VERS",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                },
                                {
                                    "name": "GOLD_LAST_UPDATED_CDC_VERS",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/get_last_updated_version_source_table",
                                        "baseParameters": {
                                            "source_table_name": {
                                                "value": "@item().silver_table_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "UPDATE_LAST_CDC_VERS",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GOLD_LAST_UPDATED_CDC_VERS",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "[[dbo].[UpdatePipelineConfigOnId]",
                                            "type": "Expression"
                                        },
                                        "storedProcedureParameters": {
                                            "value": {
                                                "value": {
                                                    "value": "@{activity('GOLD_LAST_UPDATED_CDC_VERS').output.runOutput['last_updated_version_source_table']}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ID": {
                                                "value": {
                                                    "value": "@item().id",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "key": {
                                                "value": {
                                                    "value": "GOLD_LAST_UPDATED_CDC_VERS",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/plan_and_forecast"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:18:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sql_server_rds_parametrized')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_plan_forecast_bronze')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select \nprocess_name,\nsource_table_name,\nbronze_table_name,\nbronze_table_full_path,\nbronze_write_mode,\nlanding_target_dir,\nlanding_target_path,\nlanding_target_file_nm,\nbronze_table_delta_path,\nlanding_storage_container,\nlanding_storage_account,\nenv,\nbronze_ddl_file_path\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BPC_Forecast_Plan'\nand interface_active='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "bronze_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/landing_to_bronze_ingestion",
                                        "baseParameters": {
                                            "target_table_identifier": {
                                                "value": "@item().bronze_table_name",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "target_data_path": {
                                                "value": "@item().bronze_table_full_path",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@concat('abfss://',item().landing_storage_container,'@',item().landing_storage_account,'.dfs.core.windows.net/',item().landing_target_dir,'/',item().landing_target_path,item().landing_target_file_nm,'/')\n",
                                                "type": "Expression"
                                            },
                                            "bronze_write_mode": {
                                                "value": "@item().bronze_write_mode",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "table_ddl_file_path": {
                                                "value": "@item().bronze_ddl_file_path",
                                                "type": "Expression"
                                            },
                                            "bad_record_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/badrecord/'\n)",
                                                "type": "Expression"
                                            },
                                            "schema_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/schema')",
                                                "type": "Expression"
                                            },
                                            "checkpoint_path": {
                                                "value": "@concat(item().bronze_table_full_path,'/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Web_Fail_Bronze",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "bronze_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze] [Failed] for @{item().landing_target_file_nm}\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "bronze_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze][Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load completed. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":@{pipeline().globalParameters.EMAIL_RECEIPT},\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Bronze] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-bronze zone load is failed. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/plan_and_forecast"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:18:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_adhoc_sac_hierarchy_landing')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Ingest SAC hierarchy data from excel source to data layers",
                "activities": [
                    {
                        "name": "Copy SAC customer_segment_mapping",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "additionalColumns": [
                                    {
                                        "name": "ADF_RUN_ID",
                                        "value": {
                                            "value": "@pipeline().RunId",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "ADF_JOB_ID",
                                        "value": {
                                            "value": "@pipeline().TriggerId",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_sac_customer_mapping",
                                "type": "DatasetReference",
                                "parameters": {
                                    "storage_account_url": {
                                        "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sac_customer_mapping_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "storage_account_url": {
                                        "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Copy SAC product_hierarchy1_mapping",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "additionalColumns": [
                                    {
                                        "name": "ADF_RUN_ID",
                                        "value": {
                                            "value": "@pipeline().RunId",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "ADF_JOB_ID",
                                        "value": {
                                            "value": "@pipeline().TriggerId",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_sac_product_mapping",
                                "type": "DatasetReference",
                                "parameters": {
                                    "storage_account_url": {
                                        "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sac_product_mapping_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "storage_account_url": {
                                        "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Copy SAC company_code_mapping",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "additionalColumns": [
                                    {
                                        "name": "ADF_RUN_ID",
                                        "value": {
                                            "value": "@pipeline().RunId",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "ADF_JOB_ID",
                                        "value": {
                                            "value": "@pipeline().TriggerId",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_sac_mck_code_mapping",
                                "type": "DatasetReference",
                                "parameters": {
                                    "storage_account_url": {
                                        "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sac_mck_code_mapping_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "storage_account_url": {
                                        "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Copy SAC sac_account_classification_mapping",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ExcelSource",
                                "additionalColumns": [
                                    {
                                        "name": "ADF_RUN_ID",
                                        "value": {
                                            "value": "@pipeline().RunId",
                                            "type": "Expression"
                                        }
                                    },
                                    {
                                        "name": "ADF_JOB_ID",
                                        "value": {
                                            "value": "@pipeline().TriggerId",
                                            "type": "Expression"
                                        }
                                    }
                                ],
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_sac_account_classification_mapping",
                                "type": "DatasetReference",
                                "parameters": {
                                    "storage_account_url": {
                                        "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sac_account_classification_mapping_parquet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "storage_account_url": {
                                        "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "If Condition1",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Copy SAC customer_segment_mapping",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "Copy SAC product_hierarchy1_mapping",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "Copy SAC company_code_mapping",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            },
                            {
                                "activity": "Copy SAC sac_account_classification_mapping",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@or(or(or(equals(activity('Copy SAC company_code_mapping').status ,'Failed'),equals(activity('Copy SAC customer_segment_mapping').status ,'Failed')),equals(activity('Copy SAC product_hierarchy1_mapping').status ,'Failed')),equals(activity('Copy SAC sac_account_classification_mapping').status ,'Failed'))",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Fail_task_for_if",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "If Condition1",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/sac_hierarchy_load"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T05:07:22Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sac_customer_mapping')]",
                "[concat(variables('factoryId'), '/datasets/ds_sac_customer_mapping_parquet')]",
                "[concat(variables('factoryId'), '/datasets/ds_sac_product_mapping')]",
                "[concat(variables('factoryId'), '/datasets/ds_sac_product_mapping_parquet')]",
                "[concat(variables('factoryId'), '/datasets/ds_sac_mck_code_mapping')]",
                "[concat(variables('factoryId'), '/datasets/ds_sac_mck_code_mapping_parquet')]",
                "[concat(variables('factoryId'), '/datasets/ds_sac_account_classification_mapping')]",
                "[concat(variables('factoryId'), '/datasets/ds_sac_account_classification_mapping_parquet')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_copa_bex_landing')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nid,\nsource_table_name,\nprocess_name,\nlanding_storage_account,\nlanding_storage_container,\nlanding_target_dir,\nlanding_target_path,\nlanding_target_file_nm,\nsource_query_dml,\nsource_delta_col,\nsource_delta_val,\nsource_delta_op,\nlanding_target_full_path,\nlanding_storage_layer,\nenv\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BHP_COPA_BEX_ACTUALS'\nand interface_active = 'Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "Copy_data_from_source_sink",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Lookup_connection_table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SapHanaSource",
                                            "additionalColumns": [
                                                {
                                                    "name": "adf_run_id",
                                                    "value": {
                                                        "value": "@pipeline().RunId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                {
                                                    "name": "adf_job_id",
                                                    "value": {
                                                        "value": "@pipeline().TriggerId",
                                                        "type": "Expression"
                                                    }
                                                }
                                            ],
                                            "query": {
                                                "value": "@concat(item().source_query_dml, ' WHERE ?AdfHanaDynamicRangePartitionCondition AND \"ZLOADDATE\" > ''', string(item().source_delta_val), '''')",
                                                "type": "Expression"
                                            },
                                            "packetSize": 2000000,
                                            "partitionOption": "SapHanaDynamicRange",
                                            "partitionSettings": {
                                                "partitionColumnName": {
                                                    "value": "@{pipeline().globalParameters.BEX_PARTITION}",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "sink": {
                                            "type": "ParquetSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "ParquetWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "SapHanaTable",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ServerName": {
                                                    "value": "@activity('Lookup_connection_table').output.firstRow.ServerName",
                                                    "type": "Expression"
                                                },
                                                "UserName": {
                                                    "value": "@activity('Lookup_connection_table').output.firstRow.UserName",
                                                    "type": "Expression"
                                                },
                                                "KV_SecretName": {
                                                    "value": "@activity('Lookup_connection_table').output.firstRow.KeyVaultDetails ",
                                                    "type": "Expression"
                                                },
                                                "key_vault_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "adls2_parquet_file",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "target_dir": {
                                                    "value": "@concat(item().landing_target_dir,'/',item().landing_target_path,'/',item().landing_target_file_nm,'/','day=',formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd'),'/hr=',formatDateTime(pipeline().TriggerTime, 'hh')\n,'/',item().landing_target_file_nm,'_',pipeline().TriggerTime)",
                                                    "type": "Expression"
                                                },
                                                "target_file_system": {
                                                    "value": "@item().landing_storage_container",
                                                    "type": "Expression"
                                                },
                                                "file_path": "/",
                                                "storage_account_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_STORAGE_ACCOUNT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Lookup_connection_table",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AmazonRdsForSqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('Select Id, ServerName, UserName, KeyVaultDetails from ', pipeline().globalParameters.SQLSERVER_SAP_CONNECTION_TABLENAME, ' where Env=''', pipeline().globalParameters.SAP_BW_ENV, '''')\n",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "SqlServerTableParametrized",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ServerName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                    "type": "Expression"
                                                },
                                                "UserName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                    "type": "Expression"
                                                },
                                                "KV_SecretName": {
                                                    "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                    "type": "Expression"
                                                },
                                                "SQLDatabaseName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                    "type": "Expression"
                                                },
                                                "key_vault_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Landing_Table_Failure_alert",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Failed] - for @{item().landing_target_file_nm}\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load is failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Stored procedure_failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertAuditLog]",
                                        "storedProcedureParameters": {
                                            "DataFactoryName": {
                                                "value": {
                                                    "value": "@pipeline().DataFactory",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfRunId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfJobId": {
                                                "value": {
                                                    "value": "@pipeline().TriggerTime",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EffectiveIntegrationRuntime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.effectiveIntegrationRuntime}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuingDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].detailedDurations.queuingDuration}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartTime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].start}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EndTime": {
                                                "value": {
                                                    "value": "@addseconds(string(activity('Copy_data_from_source_sink').output.executionDetails[0].start),activity('Copy_data_from_source_sink').output.copyDuration)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "CopyDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.copyDuration}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "NoParallelCopies": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.usedParallelCopies}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "SourceTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsRead}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTableCount": {
                                                "value": {
                                                    "value": "0",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorCode": {
                                                "value": {
                                                    "value": "@string(activity('Copy_data_from_source_sink').output.Errors[0].Code)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "@string(activity('Copy_data_from_source_sink').output.Errors[0].message)",
                                                    "type": "Expression"
                                                }
                                            },
                                            "StoredProcExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "pipeline_name": {
                                                "value": {
                                                    "value": "@{pipeline().Pipeline}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ControlTableId": {
                                                "value": "0",
                                                "type": "Int64"
                                            },
                                            "SourceTable": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTable": {
                                                "value": {
                                                    "value": "@item().landing_target_full_path",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Env": {
                                                "value": {
                                                    "value": "@item().env",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Layer": {
                                                "value": {
                                                    "value": "@item().landing_storage_layer\n",
                                                    "type": "Expression"
                                                }
                                            },
                                            "process_name": {
                                                "value": {
                                                    "value": "@item().process_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "interface_name": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "details": {
                                                "value": {
                                                    "value": "''",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Stored procedure Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertAuditLog]",
                                        "storedProcedureParameters": {
                                            "DataFactoryName": {
                                                "value": {
                                                    "value": "@pipeline().DataFactory",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfRunId": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "adfJobId": {
                                                "value": {
                                                    "value": "@pipeline().TriggerTime",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EffectiveIntegrationRuntime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.effectiveIntegrationRuntime}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "QueuingDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].detailedDurations.queuingDuration}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartTime": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].start}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "EndTime": {
                                                "value": {
                                                    "value": "@addseconds(string(activity('Copy_data_from_source_sink').output.executionDetails[0].start),activity('Copy_data_from_source_sink').output.copyDuration)",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "CopyDurationInSecs": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.copyDuration}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "NoParallelCopies": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.usedParallelCopies}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "SourceTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsRead}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTableCount": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.rowsCopied}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorCode": {
                                                "value": {
                                                    "value": "''",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ErrorMessage": {
                                                "value": "''"
                                            },
                                            "StoredProcExecutionStatus": {
                                                "value": {
                                                    "value": "@{activity('Copy_data_from_source_sink').output.executionDetails[0].status}",
                                                    "type": "Expression"
                                                }
                                            },
                                            "pipeline_name": {
                                                "value": {
                                                    "value": "@{pipeline().Pipeline}'",
                                                    "type": "Expression"
                                                }
                                            },
                                            "ControlTableId": {
                                                "value": "0",
                                                "type": "Int64"
                                            },
                                            "SourceTable": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "TargetTable": {
                                                "value": {
                                                    "value": "@item().landing_target_full_path",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Env": {
                                                "value": {
                                                    "value": "@item().env",
                                                    "type": "Expression"
                                                }
                                            },
                                            "Layer": {
                                                "value": {
                                                    "value": "@item().landing_storage_layer\n",
                                                    "type": "Expression"
                                                }
                                            },
                                            "process_name": {
                                                "value": {
                                                    "value": "@item().process_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "interface_name": {
                                                "value": {
                                                    "value": "@item().source_table_name",
                                                    "type": "Expression"
                                                }
                                            },
                                            "details": {
                                                "value": {
                                                    "value": "''",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "If Condition1",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Stored procedure Success",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "Stored procedure_failure",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        },
                                        {
                                            "activity": "Copy_data_from_source_sink",
                                            "dependencyConditions": [
                                                "Completed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(or(equals(activity('Copy_data_from_source_sink').status ,'Failed'),equals(activity('Stored procedure Success').status ,'Failed')),equals(activity('Stored procedure_failure').status ,'Failed'))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Fail_task",
                                                "type": "Fail",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "message": "Pipeline Failed",
                                                    "errorCode": "500"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Fail_task_for_if",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "If Condition1",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/copa_actuals"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T05:07:22Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/datasets/SapHanaTable')]",
                "[concat(variables('factoryId'), '/datasets/adls2_parquet_file')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sql_server_rds_parametrized')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_adhoc_sac_hierarchy_gold')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select\nid,\nprocess_name,\nsource_table_name,\nsilver_table_name,\ngold_table_full_path,\ngold_ddl_file_path,\ngold_table_name,\ngold_storage_layer,\nis_gold_enable,\nenv,\nsilver_table_housekeeping_column_list,\nsilver_table_full_path,\ngold_dml,\nbusiness_unit,\nsegment_name,\nsource_system_name,\nis_dimension,\nlanding_target_file_nm,\nGOLD_LAST_UPDATED_CDC_VERS\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='FLAT_FILE_SAC_HIERARCHY'\nand interface_active='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "gold_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/silver_to_gold_ingestion",
                                        "baseParameters": {
                                            "options": {
                                                "value": "{}",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().silver_table_name",
                                                "type": "Expression"
                                            },
                                            "target_table_identifier": {
                                                "value": "@item().gold_table_name",
                                                "type": "Expression"
                                            },
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "adf_job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "LAYER": {
                                                "value": "@item().gold_storage_layer",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "housekeeping_column_list": {
                                                "value": "@item().silver_table_housekeeping_column_list",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@item().silver_table_full_path",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_gold": {
                                                "value": "@concat(item().gold_table_full_path, '/checkpoint')",
                                                "type": "Expression"
                                            },
                                            "gold_dml": {
                                                "value": "@item().gold_dml",
                                                "type": "Expression"
                                            },
                                            "business_unit": {
                                                "value": "@item().business_unit",
                                                "type": "Expression"
                                            },
                                            "segment_name": {
                                                "value": "@item().segment_name",
                                                "type": "Expression"
                                            },
                                            "source_system_name": {
                                                "value": "@item().source_system_name",
                                                "type": "Expression"
                                            },
                                            "is_dimension": {
                                                "value": "@item().is_dimension",
                                                "type": "Expression"
                                            },
                                            "gold_last_processed_version": {
                                                "value": "@string(item().GOLD_LAST_UPDATED_CDC_VERS)",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Web_Fail_gold",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.Email_receipt}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task_copy1",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        },
                                        {
                                            "activity": "GOLD_LAST_UPDATED_CDC_VERS",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        },
                                        {
                                            "activity": "UPDATE_LAST_CDC_VERS",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                },
                                {
                                    "name": "GOLD_LAST_UPDATED_CDC_VERS",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/get_last_updated_version_source_table",
                                        "baseParameters": {
                                            "source_table_name": {
                                                "value": "@item().silver_table_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "UPDATE_LAST_CDC_VERS",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GOLD_LAST_UPDATED_CDC_VERS",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "[[dbo].[UpdatePipelineConfigOnId]",
                                            "type": "Expression"
                                        },
                                        "storedProcedureParameters": {
                                            "value": {
                                                "value": {
                                                    "value": "@{activity('GOLD_LAST_UPDATED_CDC_VERS').output.runOutput['last_updated_version_source_table']}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ID": {
                                                "value": {
                                                    "value": "@item().id",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "key": {
                                                "value": {
                                                    "value": "GOLD_LAST_UPDATED_CDC_VERS",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/sac_hierarchy_load"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:18:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sql_server_rds_parametrized')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_copa_raw_silver')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select\nprocess_name,\nsource_table_name,\nbronze_table_full_path,\nbronze_table_name,\nsilver_table_name,\nsilver_storage_layer,\nlanding_target_file_nm,\nsilver_table_full_path,\nsilver_write_mode,\nsilver_enable_dq_checks,\nsilver_dq_config_id,\nsilver_ddl_file_path,\nsilver_table_housekeeping_column_list,\nenv,\nmd5_flag,\nbronze_table_housekeeping_column_list,\nsilver_dml\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BHP_Delta_DSO_Table'\nand interface_active ='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "silver_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/bronze_to_silver_ingestion",
                                        "baseParameters": {
                                            "target_table_identifier": {
                                                "value": "@item().silver_table_name\n",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().bronze_table_name\n",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "target_data_path": {
                                                "value": "@item().silver_table_full_path ",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@item().bronze_table_full_path\n\n",
                                                "type": "Expression"
                                            },
                                            "write_mode": {
                                                "value": "@item().silver_write_mode\n",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "table_ddl_file_path": {
                                                "value": "item().silver_ddl_file_path\n",
                                                "type": "Expression"
                                            },
                                            "dq_config_id": {
                                                "value": "@item().silver_dq_config_id\n",
                                                "type": "Expression"
                                            },
                                            "dq_config_table_name": {
                                                "value": "DLT_DQ_METADATA",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_silver": {
                                                "value": "@concat(item().silver_table_full_path,'/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_silver_invalid": {
                                                "value": "@concat(item().silver_table_full_path,'_invalid','/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "md5_flag": {
                                                "value": "@item().md5_flag",
                                                "type": "Expression"
                                            },
                                            "options": "{}",
                                            "silver_dml": {
                                                "value": "@item().silver_dml",
                                                "type": "Expression"
                                            },
                                            "housekeeping_column_list": {
                                                "value": "@item().bronze_table_housekeeping_column_list",
                                                "type": "Expression"
                                            },
                                            "enable_dq_checks": {
                                                "value": "@item().silver_enable_dq_checks",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Web_Fail_silver",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "silver_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load failed for @{item().target_file_nm_landing}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "silver_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Web_Success",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver][Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load completed for fact tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Web_Fail",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load is failed for fact tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/copa_raw"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T05:07:22Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_fullload_master_silver')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nprocess_name,\nsource_table_name,\nlanding_target_file_nm,\nbronze_table_full_path,\nbronze_table_name,\nsilver_table_name,\nsilver_storage_layer,\nsilver_table_full_path,\nsilver_write_mode,\nsilver_enable_dq_checks,\nsilver_dq_config_id,\nenv,\nmd5_flag,\nbronze_table_housekeeping_column_list,\nsilver_dml\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BHP_Master_Table'\nand interface_active='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "silver_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/bronze_to_silver_ingestion",
                                        "baseParameters": {
                                            "target_table_identifier": {
                                                "value": "@item().silver_table_name\n",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().bronze_table_name\n",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "target_data_path": {
                                                "value": "@item().silver_table_full_path",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@item().bronze_table_full_path\n",
                                                "type": "Expression"
                                            },
                                            "write_mode": {
                                                "value": "@item().silver_write_mode\n",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "dq_config_id": {
                                                "value": "@item().silver_dq_config_id\n",
                                                "type": "Expression"
                                            },
                                            "dq_config_table_name": {
                                                "value": "DLT_DQ_METADATA",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_silver": {
                                                "value": "@concat(item().silver_table_full_path,'/checkpoint')",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_silver_invalid": {
                                                "value": "@concat(item().silver_table_full_path,'_invalid','/checkpoint'\n)",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "md5_flag": {
                                                "value": "@item().md5_flag",
                                                "type": "Expression"
                                            },
                                            "housekeeping_column_list": {
                                                "value": "@item().bronze_table_housekeeping_column_list",
                                                "type": "Expression"
                                            },
                                            "options": "{}",
                                            "silver_dml": {
                                                "value": "@item().silver_dml",
                                                "type": "Expression"
                                            },
                                            "enable_dq_checks": {
                                                "value": "@item().silver_enable_dq_checks",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Web_Fail_silver",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "silver_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver] [Failed] - for @{item().landing_target_file_nm}\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load failed for @{item().landing_target_file_nm}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "silver_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver] [Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Silver] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-silver zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/master_load"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-18T17:14:06Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_copa_raw_gold')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select  \nid,\nprocess_name,\nsource_table_name,\nsilver_table_name,\ngold_table_full_path,\ngold_ddl_file_path,\ngold_table_name,\ngold_storage_layer,\nis_gold_enable,\nenv,\nsilver_table_housekeeping_column_list,\nsilver_table_full_path,\ngold_dml,\nbusiness_unit,\nsegment_name,\nsource_system_name,\nis_dimension,\nlanding_target_file_nm,\nGOLD_LAST_UPDATED_CDC_VERS\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL]\nwhere process_name='BHP_Delta_DSO_Table'\nand interface_active ='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup_config_table').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "gold_layer_ingestion",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/silver_to_gold_ingestion",
                                        "baseParameters": {
                                            "options": {
                                                "value": "{}",
                                                "type": "Expression"
                                            },
                                            "source_table_identifier": {
                                                "value": "@item().silver_table_name",
                                                "type": "Expression"
                                            },
                                            "target_table_identifier": {
                                                "value": "@item().gold_table_name",
                                                "type": "Expression"
                                            },
                                            "adf_run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "adf_job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "LAYER": {
                                                "value": "@item().gold_storage_layer",
                                                "type": "Expression"
                                            },
                                            "env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "pipeline_name": {
                                                "value": "@pipeline().Pipeline",
                                                "type": "Expression"
                                            },
                                            "database_host": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "database_port": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASEPORT",
                                                "type": "Expression"
                                            },
                                            "database_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "db_secret_scope": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_SECRETSCOPE",
                                                "type": "Expression"
                                            },
                                            "user_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "pw_secret_key": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "logging_table_name": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_LOGGING_TABLENAME",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "housekeeping_column_list": {
                                                "value": "@item().silver_table_housekeeping_column_list",
                                                "type": "Expression"
                                            },
                                            "run_id": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            },
                                            "job_id": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "source_file_path": {
                                                "value": "@item().silver_table_full_path",
                                                "type": "Expression"
                                            },
                                            "pipeline_start_time": {
                                                "value": "@pipeline().TriggerTime",
                                                "type": "Expression"
                                            },
                                            "checkpoint_file_path_gold": {
                                                "value": "@concat(item().gold_table_full_path,'/raw_checkpoint/checkpoint')",
                                                "type": "Expression"
                                            },
                                            "gold_dml": {
                                                "value": "@item().gold_dml",
                                                "type": "Expression"
                                            },
                                            "business_unit": {
                                                "value": "@item().business_unit",
                                                "type": "Expression"
                                            },
                                            "segment_name": {
                                                "value": "@item().segment_name",
                                                "type": "Expression"
                                            },
                                            "source_system_name": {
                                                "value": "@item().source_system_name",
                                                "type": "Expression"
                                            },
                                            "is_dimension": {
                                                "value": "@item().is_dimension",
                                                "type": "Expression"
                                            },
                                            "gold_last_processed_version": {
                                                "value": "@string(item().GOLD_LAST_UPDATED_CDC_VERS)",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Web_Fail_gold",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": {
                                            "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                            "type": "Expression"
                                        },
                                        "body": {
                                            "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load failed for @{item().target_file_nm_landing}. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Fail_task",
                                    "type": "Fail",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        },
                                        {
                                            "activity": "GOLD_LAST_UPDATED_CDC_VERS",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        },
                                        {
                                            "activity": "UPDATE_LAST_CDC_VERS",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "message": "Pipeline Failed",
                                        "errorCode": "500"
                                    }
                                },
                                {
                                    "name": "GOLD_LAST_UPDATED_CDC_VERS",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [
                                        {
                                            "activity": "gold_layer_ingestion",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/Workspace/Repos/deda-fdp/deda-fdp/common/utils/get_last_updated_version_source_table",
                                        "baseParameters": {
                                            "source_table_name": {
                                                "value": "@item().silver_table_name",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureDatabricksLinkedService",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "workspace_url": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_URL",
                                                "type": "Expression"
                                            },
                                            "workspace_resource_id": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_WORKSPACE_ID",
                                                "type": "Expression"
                                            },
                                            "cluster_version": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_CLUSTER_VERSION",
                                                "type": "Expression"
                                            },
                                            "node_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_NODE_TYPE",
                                                "type": "Expression"
                                            },
                                            "driver_type": {
                                                "value": "@pipeline().globalParameters.DATABRICKS_DRIVER_TYPE",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "UPDATE_LAST_CDC_VERS",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "GOLD_LAST_UPDATED_CDC_VERS",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "[[dbo].[UpdatePipelineConfigOnId]",
                                            "type": "Expression"
                                        },
                                        "storedProcedureParameters": {
                                            "value": {
                                                "value": {
                                                    "value": "@{activity('GOLD_LAST_UPDATED_CDC_VERS').output.runOutput['last_updated_version_source_table']}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ID": {
                                                "value": {
                                                    "value": "@item().id",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "key": {
                                                "value": {
                                                    "value": "GOLD_LAST_UPDATED_CDC_VERS",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Gold] [Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-gold zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/copa_raw"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-19T17:18:56Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLinkedService')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sql_server_rds_parametrized')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_history_mid_level_pipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ForEach_loop_all_interfaces",
                        "type": "ForEach",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.ObjectsPerGroupToCopy",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Lookup_connection_table",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AmazonRdsForSqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "@Select Id, ServerName, UserName, KeyVaultDetails from dbo.DI_CONNECTION_CONTROL_TABLE where Env= pipeline().globalParameters.bhh_env_key",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "SqlServerTableParametrized",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ServerName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                    "type": "Expression"
                                                },
                                                "UserName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                    "type": "Expression"
                                                },
                                                "KV_SecretName": {
                                                    "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                    "type": "Expression"
                                                },
                                                "SQLDatabaseName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                    "type": "Expression"
                                                },
                                                "key_vault_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Lookup Distinct Dates",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Lookup_connection_table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AmazonRdsForSqlServerSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('SELECT DISTINCT TO_CHAR(TO_DATE(\"',item().source_delta_col,'\", ''YYYYMMDD''), ''YYYYMMDD'') AS DATES FROM ',item().source_table_name, ' WHERE \"',item().source_delta_col, '\" BETWEEN ',item().landing_last_start_date, ' and ',item().landing_last_end_date,' ORDER BY DATES', ' DESC')",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "SqlServerTableParametrized",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "ServerName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                    "type": "Expression"
                                                },
                                                "UserName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                    "type": "Expression"
                                                },
                                                "KV_SecretName": {
                                                    "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                    "type": "Expression"
                                                },
                                                "SQLDatabaseName": {
                                                    "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                    "type": "Expression"
                                                },
                                                "key_vault_url": {
                                                    "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": false
                                    }
                                },
                                {
                                    "name": "Execute Pipeline1",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Lookup Distinct Dates",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "pl_history_inner_level_pipeline",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Get_Distinct_dates": {
                                                "value": "@activity('Lookup Distinct Dates').output.value",
                                                "type": "Expression"
                                            },
                                            "zloaddate_col_nm": {
                                                "value": "@item().source_delta_col",
                                                "type": "Expression"
                                            },
                                            "partition_col_nm": {
                                                "value": "@item().source_partition_col",
                                                "type": "Expression"
                                            },
                                            "target_dir_landing": {
                                                "value": "@item().landing_target_dir",
                                                "type": "Expression"
                                            },
                                            "storage_container_landing": {
                                                "value": "@item().landing_storage_container",
                                                "type": "Expression"
                                            },
                                            "target_path_landing": {
                                                "value": "@item().landing_target_path",
                                                "type": "Expression"
                                            },
                                            "target_file_nm_landing": {
                                                "value": "@item().landing_target_file_nm",
                                                "type": "Expression"
                                            },
                                            "source_query_dml": {
                                                "value": "@item().source_query_dml",
                                                "type": "Expression"
                                            },
                                            "SourceTable": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "TargetTable": {
                                                "value": "@item().landing_target_full_path",
                                                "type": "Expression"
                                            },
                                            "Env": {
                                                "value": "@item().env",
                                                "type": "Expression"
                                            },
                                            "Layer": {
                                                "value": "@item().landing_storage_layer",
                                                "type": "Expression"
                                            },
                                            "process_name": {
                                                "value": "@item().process_name",
                                                "type": "Expression"
                                            },
                                            "interface_name": {
                                                "value": "@item().source_table_name",
                                                "type": "Expression"
                                            },
                                            "Id": {
                                                "value": "@item().Id",
                                                "type": "Expression"
                                            },
                                            "landing_start_date": {
                                                "value": "@item().landing_last_start_date",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Update Pipeline Config",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Execute Pipeline1",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[UpdateinterfaceflagPipelineConfig]",
                                        "storedProcedureParameters": {
                                            "interface_active": {
                                                "value": "N"
                                            },
                                            "Id": {
                                                "value": {
                                                    "value": "@item().Id",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "ls_cfod_sql_server_rds_parametrized",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "ServerName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                                "type": "Expression"
                                            },
                                            "UserName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                                "type": "Expression"
                                            },
                                            "KV_SecretName": {
                                                "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                                "type": "Expression"
                                            },
                                            "SQLDatabaseName": {
                                                "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                                "type": "Expression"
                                            },
                                            "key_vault_url": {
                                                "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Fail_Pipeline",
                        "type": "Fail",
                        "dependsOn": [
                            {
                                "activity": "ForEach_loop_all_interfaces",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "message": "Pipeline Failed",
                            "errorCode": "500"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "ObjectsPerGroupToCopy": {
                        "type": "array"
                    }
                },
                "folder": {
                    "name": "FDP/history_load"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T05:07:23Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/pipelines/pl_history_inner_level_pipeline')]",
                "[concat(variables('factoryId'), '/linkedServices/ls_cfod_sql_server_rds_parametrized')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_history_top_level_pipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "First level of history load pipeline to create loop to load multiple dates ",
                "activities": [
                    {
                        "name": "Lookup_config_table",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AmazonRdsForSqlServerSource",
                                "sqlReaderQuery": "select\r\nid,\r\nsource_table_name,\r\nprocess_name,\r\nlanding_storage_account,\r\nlanding_storage_container,\r\nlanding_target_dir,\r\nlanding_target_path,\r\nlanding_target_file_nm,\r\nsource_query_dml,\r\nlanding_last_start_date,\r\nlanding_last_end_date,\r\nsource_delta_col,\r\nsource_partition_col,\r\nsource_delta_val,\r\nsource_delta_op,\r\nlanding_target_full_path,\r\nlanding_storage_layer,\r\nsource_partition_col,\r\nenv \r\nfrom [dbo].[DI_PIPELINE_CONFIG_TBL] where process_name= 'BHP_History_Delta_DSO_Table' and interface_active='Y'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SqlServerTableParametrized",
                                "type": "DatasetReference",
                                "parameters": {
                                    "ServerName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_SERVERNAME",
                                        "type": "Expression"
                                    },
                                    "UserName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_USERNAME",
                                        "type": "Expression"
                                    },
                                    "KV_SecretName": {
                                        "value": "@pipeline().globalParameters.AZURE_SQLSERVER_PASSWORD",
                                        "type": "Expression"
                                    },
                                    "SQLDatabaseName": {
                                        "value": "@pipeline().globalParameters.SQLSERVER_DATABASENAME",
                                        "type": "Expression"
                                    },
                                    "key_vault_url": {
                                        "value": "@pipeline().globalParameters.AZURE_KEY_VAULT_URL",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Execute Pipeline1",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Lookup_config_table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_history_mid_level_pipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "ObjectsPerGroupToCopy": {
                                    "value": "@activity('Lookup_config_table').output.value",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Success_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Execute Pipeline1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Success]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load completed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Success <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Failure_Mail_Alert",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Execute Pipeline1",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "method": "POST",
                            "headers": {},
                            "url": {
                                "value": "@pipeline().globalParameters.LOGIC_APPS_URL",
                                "type": "Expression"
                            },
                            "body": {
                                "value": "{\n \"to\":\"@{pipeline().globalParameters.EMAIL_RECEIPT}\",\n  \"sub\":\"[McKesson] -FDP: @{pipeline().Pipeline} [Landing][Failed]\",\n  \"body\":\"\nHi All, <br/><br/>\nFDP-landing zone load is failed for dimension tables. Please find pipeline details below. <br/><br/>\n<b>Status:</b> Failed <br/>\n<b>Pipeline Name:</b> @{pipeline().Pipeline} <br/>\n<b>Data Factory Name:</b> @{pipeline().DataFactory} <br/>\n<b>Run Id:</b> @{pipeline().RunId} <br/>\n<b>Pipeline Trigger Time:</b> @{pipeline().TriggerTime} <br/>\n<b>Pipeline Trigger Type:</b> @{pipeline().TriggerType} <br/><br/>\nThank you.\n\"\n}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "FDP/history_load"
                },
                "annotations": [],
                "lastPublishTime": "2024-03-16T05:07:24Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTableParametrized')]",
                "[concat(variables('factoryId'), '/pipelines/pl_history_mid_level_pipeline')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/default')]",
            "type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
            "apiVersion": "2018-06-01",
            "properties": {},
            "dependsOn": []
        }
    ]
}
